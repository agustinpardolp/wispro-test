{"ast":null,"code":"var _jsxFileName = \"/Users/agustinpardo/Desktop/challenge-wispro/client/src/components/Navbar/index.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useCallback } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { withRouter } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { StyledNavbar } from \"./styled-components\";\nimport { useModal } from \"../../hooks\";\nimport { logout } from \"../../store/actions/loginActions\";\nimport Modal from \"../Modal\";\nimport { FormattedMessage } from \"react-intl\";\nimport Menu from \"./Menu\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const Navbar = ({\n  location,\n  history,\n  user,\n  logout\n}) => {\n  _s();\n\n  const {\n    showModal,\n    hideModal\n  } = useModal(false);\n  let tokenData = JSON.parse(localStorage.getItem(\"token_data\"));\n  const handleLogout = useCallback(() => {\n    hideModal();\n    logout();\n    history.push(\"/login\");\n  }, [hideModal, history, logout]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(StyledNavbar, {\n      children: [/*#__PURE__*/_jsxDEV(StyledNavbar.Brand, {\n        children: /*#__PURE__*/_jsxDEV(FormattedMessage, {\n          id: \"navbar.title\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Menu, {\n        token: tokenData || user.uid\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      show: showModal,\n      onConfirm: handleLogout,\n      onHide: hideModal,\n      label: \"modal.message\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(Navbar, \"Y/kSZRFAiJTkTqB7Qyd1d5KxC6o=\", false, function () {\n  return [useModal];\n});\n\n_c = Navbar;\nexport const mapStateToProps = state => {\n  const {\n    login: {\n      user\n    }\n  } = state;\n  return {\n    user\n  };\n};\nconst mapDispatchToProps = {\n  logout\n};\nNavbar.propTypes = {\n  location: PropTypes.object,\n  history: PropTypes.object,\n  logout: PropTypes.func\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter( /*#__PURE__*/React.memo(Navbar, (prevProps, nextProps) => {\n  return prevProps.location === nextProps.location;\n})));\n\nvar _c;\n\n$RefreshReg$(_c, \"Navbar\");","map":{"version":3,"sources":["/Users/agustinpardo/Desktop/challenge-wispro/client/src/components/Navbar/index.jsx"],"names":["React","useCallback","PropTypes","withRouter","connect","StyledNavbar","useModal","logout","Modal","FormattedMessage","Menu","Navbar","location","history","user","showModal","hideModal","tokenData","JSON","parse","localStorage","getItem","handleLogout","push","uid","mapStateToProps","state","login","mapDispatchToProps","propTypes","object","func","memo","prevProps","nextProps"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,WAAhB,QAAmC,OAAnC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,YAAT,QAA6B,qBAA7B;AACA,SAASC,QAAT,QAAyB,aAAzB;AACA,SAASC,MAAT,QAAuB,kCAAvB;AACA,OAAOC,KAAP,MAAkB,UAAlB;AACA,SAASC,gBAAT,QAAiC,YAAjC;AACA,OAAOC,IAAP,MAAiB,QAAjB;;;AAEA,OAAO,MAAMC,MAAM,GAAG,CAAC;AAAEC,EAAAA,QAAF;AAAYC,EAAAA,OAAZ;AAAqBC,EAAAA,IAArB;AAA2BP,EAAAA;AAA3B,CAAD,KAAyC;AAAA;;AAC7D,QAAM;AAAEQ,IAAAA,SAAF;AAAaC,IAAAA;AAAb,MAA2BV,QAAQ,CAAC,KAAD,CAAzC;AACA,MAAIW,SAAS,GAAGC,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,YAArB,CAAX,CAAhB;AACA,QAAMC,YAAY,GAAGrB,WAAW,CAAC,MAAM;AACrCe,IAAAA,SAAS;AACTT,IAAAA,MAAM;AACNM,IAAAA,OAAO,CAACU,IAAR,CAAa,QAAb;AACD,GAJ+B,EAI7B,CAACP,SAAD,EAAYH,OAAZ,EAAqBN,MAArB,CAJ6B,CAAhC;AAMA,sBACE;AAAA,4BACE,QAAC,YAAD;AAAA,8BACE,QAAC,YAAD,CAAc,KAAd;AAAA,+BACE,QAAC,gBAAD;AAAkB,UAAA,EAAE,EAAC;AAArB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADF,eAIE,QAAC,IAAD;AAAM,QAAA,KAAK,EAAEU,SAAS,IAAIH,IAAI,CAACU;AAA/B;AAAA;AAAA;AAAA;AAAA,cAJF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAOE,QAAC,KAAD;AACE,MAAA,IAAI,EAAET,SADR;AAEE,MAAA,SAAS,EAAEO,YAFb;AAGE,MAAA,MAAM,EAAEN,SAHV;AAIE,MAAA,KAAK,EAAC;AAJR;AAAA;AAAA;AAAA;AAAA,YAPF;AAAA,kBADF;AAgBD,CAzBM;;GAAML,M;UACsBL,Q;;;KADtBK,M;AA0Bb,OAAO,MAAMc,eAAe,GAAIC,KAAD,IAAW;AACxC,QAAM;AACJC,IAAAA,KAAK,EAAE;AAAEb,MAAAA;AAAF;AADH,MAEFY,KAFJ;AAGA,SAAO;AACLZ,IAAAA;AADK,GAAP;AAGD,CAPM;AASP,MAAMc,kBAAkB,GAAG;AACzBrB,EAAAA;AADyB,CAA3B;AAGAI,MAAM,CAACkB,SAAP,GAAmB;AACjBjB,EAAAA,QAAQ,EAAEV,SAAS,CAAC4B,MADH;AAEjBjB,EAAAA,OAAO,EAAEX,SAAS,CAAC4B,MAFF;AAGjBvB,EAAAA,MAAM,EAAEL,SAAS,CAAC6B;AAHD,CAAnB;AAMA,eAAe3B,OAAO,CACpBqB,eADoB,EAEpBG,kBAFoB,CAAP,CAIbzB,UAAU,eACRH,KAAK,CAACgC,IAAN,CAAWrB,MAAX,EAAmB,CAACsB,SAAD,EAAYC,SAAZ,KAA0B;AAC3C,SAAOD,SAAS,CAACrB,QAAV,KAAuBsB,SAAS,CAACtB,QAAxC;AACD,CAFD,CADQ,CAJG,CAAf","sourcesContent":["import React, { useCallback } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { withRouter } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { StyledNavbar } from \"./styled-components\";\nimport { useModal } from \"../../hooks\";\nimport { logout } from \"../../store/actions/loginActions\";\nimport Modal from \"../Modal\";\nimport { FormattedMessage } from \"react-intl\";\nimport Menu from \"./Menu\";\n\nexport const Navbar = ({ location, history, user, logout }) => {\n  const { showModal, hideModal } = useModal(false);\n  let tokenData = JSON.parse(localStorage.getItem(\"token_data\"));\n  const handleLogout = useCallback(() => {\n    hideModal();\n    logout();\n    history.push(\"/login\");\n  }, [hideModal, history, logout]);\n\n  return (\n    <>\n      <StyledNavbar>\n        <StyledNavbar.Brand>\n          <FormattedMessage id=\"navbar.title\" />\n        </StyledNavbar.Brand>\n        <Menu token={tokenData || user.uid}/>\n      </StyledNavbar>\n      <Modal\n        show={showModal}\n        onConfirm={handleLogout}\n        onHide={hideModal}\n        label=\"modal.message\"\n      />\n    </>\n  );\n};\nexport const mapStateToProps = (state) => {\n  const {\n    login: { user },\n  } = state;\n  return {\n    user,\n  };\n};\n\nconst mapDispatchToProps = {\n  logout,\n};\nNavbar.propTypes = {\n  location: PropTypes.object,\n  history: PropTypes.object,\n  logout: PropTypes.func,\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(\n  withRouter(\n    React.memo(Navbar, (prevProps, nextProps) => {\n      return prevProps.location === nextProps.location;\n    })\n  )\n);\n"]},"metadata":{},"sourceType":"module"}