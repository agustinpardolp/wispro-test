{"ast":null,"code":"import types from \"./types\";\nimport { usersServices } from \"../../../services/usersServices\";\n\nconst fetchUsersRequest = () => {\n  return {\n    type: types.FETCH_USERS_REQUEST\n  };\n};\n\nconst fetchUsersSuccess = data => {\n  return {\n    type: types.FETCH_USERS_SUCCESS,\n    payload: {\n      data: data\n    }\n  };\n};\n\nconst fetchUsersFailure = error => {\n  return {\n    type: types.FETCH_USERS_FAILURE,\n    payload: error\n  };\n};\n\nexport const fetchUsers = () => dispatch => {\n  dispatch(fetchUsersRequest());\n  return usersServices.fetchUsers().then(querySnapshot => {\n    let usersArray = [];\n    querySnapshot.forEach(function (doc) {\n      usersArray.push(doc.data());\n    });\n    return dispatch(fetchUsersSuccess(usersArray));\n  }).catch(error => dispatch(fetchUsersFailure(error)));\n};\n\nconst updateUserRequest = () => {\n  return {\n    type: types.UPDATE_USERS_REQUEST\n  };\n};\n\nconst updateUserSuccess = () => {\n  return {\n    type: types.UPDATE_USERS_SUCCESS\n  };\n};\n\nconst updateUserFailure = error => {\n  return {\n    type: types.UPDATE_USERS_FAILURE,\n    payload: error\n  };\n};\n\nexport const updateUser = (dni, userValues) => dispatch => {\n  dispatch(updateUserRequest());\n  return usersServices.updateUser(dni, userValues).then(res => {\n    return dispatch(updateUserSuccess(res));\n  }).catch(error => dispatch(updateUserFailure(error)));\n};\n\nconst deleteUserRequest = () => {\n  return {\n    type: types.DELETE_USERS_REQUEST\n  };\n};\n\nconst deleteUserSuccess = () => {\n  return {\n    type: types.DELETE_USERS_SUCCESS\n  };\n};\n\nconst deleteUserFailure = error => {\n  return {\n    type: types.DELETE_USERS_FAILURE,\n    payload: error\n  };\n};\n\nexport const deleteUser = id => dispatch => {\n  dispatch(deleteUserRequest());\n  return usersServices.deleteUser(id).then(res => {\n    return dispatch(deleteUserSuccess(res));\n  }).catch(error => dispatch(deleteUserFailure(error)));\n};","map":{"version":3,"sources":["/Users/agustinpardo/Desktop/challenge-wispro/client/src/store/actions/usersActions/index.js"],"names":["types","usersServices","fetchUsersRequest","type","FETCH_USERS_REQUEST","fetchUsersSuccess","data","FETCH_USERS_SUCCESS","payload","fetchUsersFailure","error","FETCH_USERS_FAILURE","fetchUsers","dispatch","then","querySnapshot","usersArray","forEach","doc","push","catch","updateUserRequest","UPDATE_USERS_REQUEST","updateUserSuccess","UPDATE_USERS_SUCCESS","updateUserFailure","UPDATE_USERS_FAILURE","updateUser","dni","userValues","res","deleteUserRequest","DELETE_USERS_REQUEST","deleteUserSuccess","DELETE_USERS_SUCCESS","deleteUserFailure","DELETE_USERS_FAILURE","deleteUser","id"],"mappings":"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","sourcesContent":["import types from \"./types\";\nimport { usersServices } from \"../../../services/usersServices\";\n\nconst fetchUsersRequest = () => {\n  return {\n    type: types.FETCH_USERS_REQUEST,\n  };\n};\nconst fetchUsersSuccess = (data) => {\n\n  return {\n    type: types.FETCH_USERS_SUCCESS,\n    payload: { data: data },\n  };\n};\nconst fetchUsersFailure = (error) => {\n  return {\n    type: types.FETCH_USERS_FAILURE,\n    payload: error,\n  };\n};\nexport const fetchUsers = () => (dispatch) => {\n  dispatch(fetchUsersRequest());\n  return usersServices\n    .fetchUsers()\n    .then((querySnapshot) => {\n      let usersArray = [];\n      querySnapshot.forEach(function (doc) {\n        usersArray.push(doc.data());\n      });\n\n      return dispatch(fetchUsersSuccess(usersArray));\n    })\n    .catch((error) => dispatch(fetchUsersFailure(error)));\n};\n\nconst updateUserRequest = () => {\n  return {\n    type: types.UPDATE_USERS_REQUEST,\n  };\n};\nconst updateUserSuccess = () => {\n  return {\n    type: types.UPDATE_USERS_SUCCESS,\n  };\n};\nconst updateUserFailure = (error) => {\n  return {\n    type: types.UPDATE_USERS_FAILURE,\n    payload: error,\n  };\n};\nexport const updateUser = (dni, userValues) => (dispatch) => {\n  dispatch(updateUserRequest());\n  return usersServices\n    .updateUser(dni, userValues)\n    .then((res) => {\n      return dispatch(updateUserSuccess(res));\n    })\n    .catch((error) => dispatch(updateUserFailure(error)));\n};\n\nconst deleteUserRequest = () => {\n  return {\n    type: types.DELETE_USERS_REQUEST,\n  };\n};\nconst deleteUserSuccess = () => {\n  return {\n    type: types.DELETE_USERS_SUCCESS,\n  };\n};\nconst deleteUserFailure = (error) => {\n  return {\n    type: types.DELETE_USERS_FAILURE,\n    payload: error,\n  };\n};\nexport const deleteUser = (id) => (dispatch) => {\n  dispatch(deleteUserRequest());\n  return usersServices\n    .deleteUser(id)\n    .then((res) => {\n      return dispatch(deleteUserSuccess(res));\n    })\n    .catch((error) => dispatch(deleteUserFailure(error)));\n};\n"]},"metadata":{},"sourceType":"module"}