{"ast":null,"code":"var _jsxFileName = \"/Users/agustinpardo/Desktop/challenge-wispro/Client/src/views/Users/components/LineChart/index.jsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { Line } from \"react-chartjs-2\";\nimport PropTypes from \"prop-types\";\nimport { useIntl } from \"react-intl\";\nimport { dataChartGenerator } from \"./constants\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst LineChart = ({\n  name,\n  surname,\n  accessTimes\n}) => {\n  _s();\n\n  const intl = useIntl();\n  const data = dataChartGenerator(intl, accessTimes);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n      children: [name, \" \", surname]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Line, {\n      height: 400,\n      width: 500,\n      data: data\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(LineChart, \"rlSgSjbewJ1PrR/Ile8g/kr050o=\", false, function () {\n  return [useIntl];\n});\n\n_c = LineChart;\nLineChart.propTypes = {\n  name: PropTypes.string,\n  surname: PropTypes.string,\n  accessTimes: PropTypes.array\n};\nexport default LineChart;\n\nvar _c;\n\n$RefreshReg$(_c, \"LineChart\");","map":{"version":3,"sources":["/Users/agustinpardo/Desktop/challenge-wispro/Client/src/views/Users/components/LineChart/index.jsx"],"names":["React","Line","PropTypes","useIntl","dataChartGenerator","LineChart","name","surname","accessTimes","intl","data","propTypes","string","array"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,IAAT,QAAqB,iBAArB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,OAAT,QAAwB,YAAxB;AAEA,SAASC,kBAAT,QAAmC,aAAnC;;;;AAEA,MAAMC,SAAS,GAAG,CAAC;AAAEC,EAAAA,IAAF;AAAQC,EAAAA,OAAR;AAAiBC,EAAAA;AAAjB,CAAD,KAAoC;AAAA;;AACpD,QAAMC,IAAI,GAAGN,OAAO,EAApB;AACA,QAAMO,IAAI,GAAGN,kBAAkB,CAACK,IAAD,EAAOD,WAAP,CAA/B;AACA,sBACE;AAAA,4BACE;AAAA,iBACGF,IADH,OACUC,OADV;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAIE,QAAC,IAAD;AAAM,MAAA,MAAM,EAAE,GAAd;AAAmB,MAAA,KAAK,EAAE,GAA1B;AAA+B,MAAA,IAAI,EAAEG;AAArC;AAAA;AAAA;AAAA;AAAA,YAJF;AAAA,kBADF;AAQD,CAXD;;GAAML,S;UACSF,O;;;KADTE,S;AAaNA,SAAS,CAACM,SAAV,GAAsB;AACpBL,EAAAA,IAAI,EAAEJ,SAAS,CAACU,MADI;AAEpBL,EAAAA,OAAO,EAAEL,SAAS,CAACU,MAFC;AAGpBJ,EAAAA,WAAW,EAAEN,SAAS,CAACW;AAHH,CAAtB;AAKA,eAAeR,SAAf","sourcesContent":["import React from \"react\";\nimport { Line } from \"react-chartjs-2\";\nimport PropTypes from \"prop-types\";\nimport { useIntl } from \"react-intl\";\n\nimport { dataChartGenerator } from \"./constants\";\n\nconst LineChart = ({ name, surname, accessTimes }) => {\n  const intl = useIntl();\n  const data = dataChartGenerator(intl, accessTimes);\n  return (\n    <>\n      <h5>\n        {name} {surname}\n      </h5>\n      <Line height={400} width={500} data={data} />\n    </>\n  );\n};\n\nLineChart.propTypes = {\n  name: PropTypes.string,\n  surname: PropTypes.string,\n  accessTimes: PropTypes.array\n};\nexport default LineChart;\n"]},"metadata":{},"sourceType":"module"}