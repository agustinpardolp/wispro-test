{"ast":null,"code":"var _jsxFileName = \"/Users/agustinpardo/Desktop/challenge-wispro/client/src/views/System/index.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { io } from \"socket.io-client\";\nimport { FormattedMessage, useIntl } from \"react-intl\";\nimport { StyledChartContainer, StyledMainContainer, StyledValue, StyledTitle } from \"./styled-components\";\nimport BarChart from \"./components/BarChart\";\nimport SystemLineChart from \"./components/SystemLineChart\";\nimport { connectionOptions } from \"./components/constants\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst System = () => {\n  _s();\n\n  const intl = useIntl();\n  const [memory, setMemory] = useState(\"\");\n  const [cpu, setCpu] = useState(\"\");\n  const [disk, setDisk] = useState(\"\");\n  const [network, setNetwork] = useState([]);\n  const [seconds, setSeconds] = useState([]);\n\n  const randomGenrator = value => {\n    return value * Math.round(Math.random() * 5);\n  };\n\n  useEffect(() => {\n    const socket = io(\"http://localhost:4000\", connectionOptions);\n    socket.on(\"connection\");\n    socket.on(\"cpu\", data => {\n      setCpu(data);\n    });\n    socket.on(\"memory\", data => {\n      let memory = randomGenrator(data);\n      setMemory(memory);\n    });\n    socket.on(\"disk\", data => {\n      setDisk(data);\n    });\n    socket.on(\"seconds\", data => {\n      let transformArray = [`${data} sec`, `${data + 1} sec`, `${data + 2} sec`, `${data + 3} sec`];\n      setSeconds(transformArray);\n    });\n    socket.on(\"network\", data => {\n      let networkFirst = randomGenrator(data);\n      let networkSecond = randomGenrator(data);\n      let networkThird = randomGenrator(data);\n      let networkDataArray = [networkFirst, networkThird, networkSecond, networkThird];\n      setNetwork(networkDataArray);\n    });\n    return () => {\n      socket.disconnect();\n    };\n  }, []);\n  const DataUsage = {\n    labelsDataUsage: seconds,\n    barColor: \"rgba(255, 99, 132, 0.2)\",\n    title: \"barChartDatatUsage.title\",\n    borderColor: \"rgba(255, 99, 132, 1)\"\n  };\n  const DataMemoryUsage = {\n    labelsDataUsage: [intl.formatMessage({\n      id: \"barChartMemoryUsage.label\"\n    }), intl.formatMessage({\n      id: \"barChartDiskUsage.title\"\n    })],\n    barColor: [\"rgba(54, 162, 235, 0.2)\", \"rgba(243,222,126, 0.2)\"],\n    title: \"barChartMemoryUsage.title\",\n    borderColor: [\"rgba(54, 162, 235, 1)\", \"rgba(243,222,126, 1)\"]\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(StyledTitle, {\n      children: /*#__PURE__*/_jsxDEV(FormattedMessage, {\n        id: \"userTable.title\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(StyledMainContainer, {\n      children: [/*#__PURE__*/_jsxDEV(StyledChartContainer, {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: /*#__PURE__*/_jsxDEV(FormattedMessage, {\n            id: \"barChartCpuUsage.title\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(StyledValue, {\n          children: [cpu, \" \", /*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"%\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(StyledChartContainer, {\n        children: /*#__PURE__*/_jsxDEV(SystemLineChart, {\n          labels: DataUsage.labelsDataUsage,\n          title: DataUsage.title,\n          barColor: DataUsage.barColor,\n          borderColor: DataUsage.borderColor,\n          values: network\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(StyledChartContainer, {\n        children: /*#__PURE__*/_jsxDEV(BarChart, {\n          labels: DataMemoryUsage.labelsDataUsage,\n          title: DataMemoryUsage.title,\n          barColor: DataMemoryUsage.barColor,\n          borderColor: DataMemoryUsage.borderColor,\n          values: [memory, disk]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 83,\n    columnNumber: 5\n  }, this);\n};\n\n_s(System, \"5GdFh8JfHTwBRyFblQ6UpCxSnPg=\", false, function () {\n  return [useIntl];\n});\n\n_c = System;\nexport default System;\n\nvar _c;\n\n$RefreshReg$(_c, \"System\");","map":{"version":3,"sources":["/Users/agustinpardo/Desktop/challenge-wispro/client/src/views/System/index.jsx"],"names":["React","useEffect","useState","io","FormattedMessage","useIntl","StyledChartContainer","StyledMainContainer","StyledValue","StyledTitle","BarChart","SystemLineChart","connectionOptions","System","intl","memory","setMemory","cpu","setCpu","disk","setDisk","network","setNetwork","seconds","setSeconds","randomGenrator","value","Math","round","random","socket","on","data","transformArray","networkFirst","networkSecond","networkThird","networkDataArray","disconnect","DataUsage","labelsDataUsage","barColor","title","borderColor","DataMemoryUsage","formatMessage","id"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { io } from \"socket.io-client\";\nimport { FormattedMessage, useIntl } from \"react-intl\";\nimport {\n  StyledChartContainer,\n  StyledMainContainer,\n  StyledValue,\n  StyledTitle,\n} from \"./styled-components\";\nimport BarChart from \"./components/BarChart\";\nimport SystemLineChart from \"./components/SystemLineChart\";\nimport { connectionOptions } from \"./components/constants\";\n\nconst System = () => {\n  const intl = useIntl();\n  const [memory, setMemory] = useState(\"\");\n  const [cpu, setCpu] = useState(\"\");\n  const [disk, setDisk] = useState(\"\");\n  const [network, setNetwork] = useState([]);\n  const [seconds, setSeconds] = useState([]);\n\n  const randomGenrator = (value) => {\n    return value * Math.round(Math.random() * 5);\n  };\n\n  useEffect(() => {\n    const socket = io(\"http://localhost:4000\", connectionOptions);\n    socket.on(\"connection\");\n    socket.on(\"cpu\", (data) => {\n      setCpu(data);\n    });\n    socket.on(\"memory\", (data) => {\n      let memory = randomGenrator(data);\n      setMemory(memory);\n    });\n    socket.on(\"disk\", (data) => {\n      setDisk(data);\n    });\n    socket.on(\"seconds\", (data) => {\n      let transformArray = [\n        `${data} sec`,\n        `${data + 1} sec`,\n        `${data + 2} sec`,\n        `${data + 3} sec`,\n      ];\n      setSeconds(transformArray);\n    });\n    socket.on(\"network\", (data) => {\n      let networkFirst = randomGenrator(data);\n      let networkSecond = randomGenrator(data);\n      let networkThird = randomGenrator(data);\n      let networkDataArray = [\n        networkFirst,\n        networkThird,\n        networkSecond,\n        networkThird,\n      ];\n      setNetwork(networkDataArray);\n    });\n    return () => {\n      socket.disconnect();\n    };\n  }, []);\n\n  const DataUsage = {\n    labelsDataUsage: seconds,\n    barColor: \"rgba(255, 99, 132, 0.2)\",\n    title: \"barChartDatatUsage.title\",\n    borderColor: \"rgba(255, 99, 132, 1)\",\n  };\n\n  const DataMemoryUsage = {\n    labelsDataUsage: [\n      intl.formatMessage({ id: \"barChartMemoryUsage.label\" }),\n      intl.formatMessage({ id: \"barChartDiskUsage.title\" }),\n    ],\n    barColor: [\"rgba(54, 162, 235, 0.2)\", \"rgba(243,222,126, 0.2)\"],\n    title: \"barChartMemoryUsage.title\",\n    borderColor: [\"rgba(54, 162, 235, 1)\", \"rgba(243,222,126, 1)\"],\n  };\n\n  return (\n    <div>\n      <StyledTitle>\n        <FormattedMessage id=\"userTable.title\" />\n      </StyledTitle>\n      <StyledMainContainer>\n        <StyledChartContainer>\n          <h3>\n            <FormattedMessage id={\"barChartCpuUsage.title\"} />\n          </h3>\n          <StyledValue>\n            {cpu} <label>%</label>\n          </StyledValue>\n        </StyledChartContainer>\n        <StyledChartContainer>\n          <SystemLineChart\n            labels={DataUsage.labelsDataUsage}\n            title={DataUsage.title}\n            barColor={DataUsage.barColor}\n            borderColor={DataUsage.borderColor}\n            values={network}\n          />\n        </StyledChartContainer>\n        <StyledChartContainer>\n          <BarChart\n            labels={DataMemoryUsage.labelsDataUsage}\n            title={DataMemoryUsage.title}\n            barColor={DataMemoryUsage.barColor}\n            borderColor={DataMemoryUsage.borderColor}\n            values={[memory, disk]}\n          />\n        </StyledChartContainer>\n      </StyledMainContainer>\n    </div>\n  );\n};\n\nexport default System;\n"]},"metadata":{},"sourceType":"module"}