{"ast":null,"code":"var _jsxFileName = \"/Users/agustinpardo/Desktop/challenge-wispro/client/src/components/Navbar/index.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useCallback, useContext } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { withRouter } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { StyledNavbar } from \"./styled-components\";\nimport { logout } from \"../../store/actions/loginActions\";\nimport { FormattedMessage } from \"react-intl\";\nimport Menu from \"./Menu\";\nimport { ModalContext } from \"../../context/ModalContext\";\nimport { MODAL_TYPE } from \"./constants\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const Navbar = ({\n  history,\n  token,\n  logout\n}) => {\n  _s();\n\n  let {\n    dispatch\n  } = useContext(ModalContext);\n  let tokenData = JSON.parse(localStorage.getItem(\"token_data\"));\n  const handleLogout = useCallback(() => {\n    logout();\n    history.push(\"/login\");\n  }, [history, logout]);\n\n  const handleDelete = data => {\n    dispatch({\n      type: \"show\",\n      modalType: MODAL_TYPE.LOGOUT,\n      modalProps: {\n        title: \"userLogout.title\",\n        message: \"userLogout.message\",\n        open: true,\n        handleConfirm: handleLogout,\n        data: data.dni\n      }\n    });\n  };\n\n  console.log(tokenData, token);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(StyledNavbar, {\n      bg: \"dark\",\n      children: [/*#__PURE__*/_jsxDEV(StyledNavbar.Brand, {\n        children: /*#__PURE__*/_jsxDEV(FormattedMessage, {\n          id: \"navbar.title\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Menu, {\n        token: tokenData || token,\n        openModal: handleDelete\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n\n_s(Navbar, \"ucgkct86OBng9sxzEx650mB6G/g=\");\n\n_c = Navbar;\nexport const mapStateToProps = state => {\n  const {\n    login: {\n      user: token\n    }\n  } = state;\n  return {\n    token: !!token\n  };\n};\nconst mapDispatchToProps = {\n  logout\n};\nNavbar.propTypes = {\n  location: PropTypes.object,\n  history: PropTypes.object,\n  logout: PropTypes.func\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter( /*#__PURE__*/React.memo(Navbar, (prevProps, nextProps) => {\n  return prevProps.location === nextProps.location;\n})));\n\nvar _c;\n\n$RefreshReg$(_c, \"Navbar\");","map":{"version":3,"sources":["/Users/agustinpardo/Desktop/challenge-wispro/client/src/components/Navbar/index.jsx"],"names":["React","useCallback","useContext","PropTypes","withRouter","connect","StyledNavbar","logout","FormattedMessage","Menu","ModalContext","MODAL_TYPE","Navbar","history","token","dispatch","tokenData","JSON","parse","localStorage","getItem","handleLogout","push","handleDelete","data","type","modalType","LOGOUT","modalProps","title","message","open","handleConfirm","dni","console","log","mapStateToProps","state","login","user","mapDispatchToProps","propTypes","location","object","func","memo","prevProps","nextProps"],"mappings":"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","sourcesContent":["import React, { useCallback, useContext } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { withRouter } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { StyledNavbar } from \"./styled-components\";\nimport { logout } from \"../../store/actions/loginActions\";\nimport { FormattedMessage } from \"react-intl\";\nimport Menu from \"./Menu\";\nimport { ModalContext } from \"../../context/ModalContext\";\nimport { MODAL_TYPE } from \"./constants\";\n\nexport const Navbar = ({  history, token, logout }) => {\n  let { dispatch } = useContext(ModalContext);\n  let tokenData = JSON.parse(localStorage.getItem(\"token_data\"));\n  const handleLogout = useCallback(() => {\n    logout();\n    history.push(\"/login\");\n  }, [history, logout]);\n\n  const handleDelete = (data) => {\n    dispatch({\n      type: \"show\",\n      modalType: MODAL_TYPE.LOGOUT,\n      modalProps: {\n        title: \"userLogout.title\",\n        message: \"userLogout.message\",\n        open: true,\n        handleConfirm: handleLogout,\n        data: data.dni,\n      },\n    });\n  };\nconsole.log(tokenData, token)\n  return (\n    <>\n      <StyledNavbar bg=\"dark\">\n        <StyledNavbar.Brand>\n          <FormattedMessage id=\"navbar.title\" />\n        </StyledNavbar.Brand>\n        <Menu token={tokenData || token} openModal={handleDelete} />\n      </StyledNavbar>\n    </>\n  );\n};\nexport const mapStateToProps = (state) => {\n  const {\n    login: { user: token },\n  } = state;\n  return {\n    token: !!token,\n  };\n};\n\n\nconst mapDispatchToProps = {\n  logout,\n};\nNavbar.propTypes = {\n  location: PropTypes.object,\n  history: PropTypes.object,\n  logout: PropTypes.func,\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(\n  withRouter(\n    React.memo(Navbar, (prevProps, nextProps) => {\n      return prevProps.location === nextProps.location;\n    })\n  )\n);\n"]},"metadata":{},"sourceType":"module"}