{"ast":null,"code":"import { withFormik } from \"formik\";\nimport * as yup from \"yup\";\nimport { REGEX } from \"../../../../constants\";\nimport EditUserForm from \"./component/Form\";\nconst validationSchema = yup.object().shape({\n  email: yup.string().trim().matches(REGEX.EMAIL_REGEX_SCHEMA, \"userEdition.emailError\").max(30).required(\" \"),\n  name: yup.string().trim().required(\"userEdition.nameError\"),\n  surname: yup.string().trim().required(\"userEdition.surnameError\"),\n  address: yup.string().trim().required(\"userEdition.addressError\"),\n  dni: yup.number().required(\"userEdition.dniError\")\n}); //formik validations\n\nconst EditUser = withFormik({\n  validateOnChange: true,\n  enableReinitialize: false,\n  validationSchema,\n  mapPropsToValues: ({\n    data\n  }) => ({\n    email: data.email || \"\",\n    name: data.name || \"\",\n    surname: data.surname || \"\",\n    address: data.address || \"\",\n    dni: data.dni || \"\"\n  }),\n  handleSubmit: (value, {\n    props,\n    setErrors\n  }) => {\n    const {\n      data: {\n        dni\n      }\n    } = props;\n    props.handleAsyncConfirm(dni, value).then(res => {\n      props.posResponse();\n      props.onClose({\n        type: \"hide\"\n      });\n    });\n  }\n})(EditUserForm);\nexport default EditUser;","map":{"version":3,"sources":["/Users/agustinpardo/Desktop/challenge-wispro/client/src/views/Users/screens/EditUser/index.jsx"],"names":["withFormik","yup","REGEX","EditUserForm","validationSchema","object","shape","email","string","trim","matches","EMAIL_REGEX_SCHEMA","max","required","name","surname","address","dni","number","EditUser","validateOnChange","enableReinitialize","mapPropsToValues","data","handleSubmit","value","props","setErrors","handleAsyncConfirm","then","res","posResponse","onClose","type"],"mappings":"AAAA,SAASA,UAAT,QAA2B,QAA3B;AACA,OAAO,KAAKC,GAAZ,MAAqB,KAArB;AACA,SAASC,KAAT,QAAsB,uBAAtB;AACA,OAAOC,YAAP,MAAyB,kBAAzB;AAEA,MAAMC,gBAAgB,GAAGH,GAAG,CAACI,MAAJ,GAAaC,KAAb,CAAmB;AAC1CC,EAAAA,KAAK,EAAEN,GAAG,CACPO,MADI,GAEJC,IAFI,GAGJC,OAHI,CAGIR,KAAK,CAACS,kBAHV,EAG8B,wBAH9B,EAIJC,GAJI,CAIA,EAJA,EAKJC,QALI,CAKK,GALL,CADmC;AAO1CC,EAAAA,IAAI,EAAEb,GAAG,CAACO,MAAJ,GAAaC,IAAb,GAAoBI,QAApB,CAA6B,uBAA7B,CAPoC;AAQ1CE,EAAAA,OAAO,EAAEd,GAAG,CAACO,MAAJ,GAAaC,IAAb,GAAoBI,QAApB,CAA6B,0BAA7B,CARiC;AAS1CG,EAAAA,OAAO,EAAEf,GAAG,CAACO,MAAJ,GAAaC,IAAb,GAAoBI,QAApB,CAA6B,0BAA7B,CATiC;AAU1CI,EAAAA,GAAG,EAAEhB,GAAG,CAACiB,MAAJ,GAAaL,QAAb,CAAsB,sBAAtB;AAVqC,CAAnB,CAAzB,C,CAYA;;AACA,MAAMM,QAAQ,GAAGnB,UAAU,CAAC;AAC1BoB,EAAAA,gBAAgB,EAAE,IADQ;AAE1BC,EAAAA,kBAAkB,EAAE,KAFM;AAG1BjB,EAAAA,gBAH0B;AAI1BkB,EAAAA,gBAAgB,EAAE,CAAC;AAAEC,IAAAA;AAAF,GAAD,MAAe;AAC/BhB,IAAAA,KAAK,EAAEgB,IAAI,CAAChB,KAAL,IAAc,EADU;AAE/BO,IAAAA,IAAI,EAAES,IAAI,CAACT,IAAL,IAAa,EAFY;AAG/BC,IAAAA,OAAO,EAAEQ,IAAI,CAACR,OAAL,IAAgB,EAHM;AAI/BC,IAAAA,OAAO,EAAEO,IAAI,CAACP,OAAL,IAAgB,EAJM;AAK/BC,IAAAA,GAAG,EAAEM,IAAI,CAACN,GAAL,IAAY;AALc,GAAf,CAJQ;AAW1BO,EAAAA,YAAY,EAAE,CAACC,KAAD,EAAQ;AAAEC,IAAAA,KAAF;AAASC,IAAAA;AAAT,GAAR,KAAiC;AAC7C,UAAM;AACJJ,MAAAA,IAAI,EAAE;AAAEN,QAAAA;AAAF;AADF,QAEFS,KAFJ;AAGAA,IAAAA,KAAK,CAACE,kBAAN,CAAyBX,GAAzB,EAA8BQ,KAA9B,EAAqCI,IAArC,CAA2CC,GAAD,IAAS;AACjDJ,MAAAA,KAAK,CAACK,WAAN;AACAL,MAAAA,KAAK,CAACM,OAAN,CAAc;AAAEC,QAAAA,IAAI,EAAE;AAAR,OAAd;AACD,KAHD;AAID;AAnByB,CAAD,CAAV,CAoBd9B,YApBc,CAAjB;AAsBA,eAAegB,QAAf","sourcesContent":["import { withFormik } from \"formik\";\nimport * as yup from \"yup\";\nimport { REGEX } from \"../../../../constants\";\nimport EditUserForm from \"./component/Form\";\n\nconst validationSchema = yup.object().shape({\n  email: yup\n    .string()\n    .trim()\n    .matches(REGEX.EMAIL_REGEX_SCHEMA, \"userEdition.emailError\")\n    .max(30)\n    .required(\" \"),\n  name: yup.string().trim().required(\"userEdition.nameError\"),\n  surname: yup.string().trim().required(\"userEdition.surnameError\"),\n  address: yup.string().trim().required(\"userEdition.addressError\"),\n  dni: yup.number().required(\"userEdition.dniError\"),\n});\n//formik validations\nconst EditUser = withFormik({\n  validateOnChange: true,\n  enableReinitialize: false,\n  validationSchema,\n  mapPropsToValues: ({ data }) => ({\n    email: data.email || \"\",\n    name: data.name || \"\",\n    surname: data.surname || \"\",\n    address: data.address || \"\",\n    dni: data.dni || \"\",\n  }),\n  handleSubmit: (value, { props, setErrors }) => {\n    const {\n      data: { dni },\n    } = props;\n    props.handleAsyncConfirm(dni, value).then((res) => {\n      props.posResponse();\n      props.onClose({ type: \"hide\" });\n    });\n  },\n})(EditUserForm);\n\nexport default EditUser;\n"]},"metadata":{},"sourceType":"module"}