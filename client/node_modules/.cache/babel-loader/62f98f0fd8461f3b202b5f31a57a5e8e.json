{"ast":null,"code":"var _jsxFileName = \"/Users/agustinpardo/Desktop/challenge-wispro/client/src/components/Table/index.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useCallback } from \"react\";\nimport { useTable, useSortBy } from 'react-table';\nimport TableHeader from \"./TableHeader/TableHeader\";\nimport TableBody from \"./TableBody/TableBody\";\nimport PropTypes from \"prop-types\";\nimport { FormattedMessage } from \"react-intl\";\nimport { StyledTable } from \"./styledComponents\";\nimport { DATA_TYPE } from \"./constants\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Table = ({\n  columns,\n  data,\n  className,\n  callBack,\n  callBackEdit,\n  callBackDelete,\n  path\n}) => {\n  _s();\n\n  const formats = [];\n  const {\n    getTableProps,\n    getTableBodyProps,\n    headerGroups,\n    rows,\n    prepareRow\n  } = useTable({\n    columns,\n    data\n  }, useSortBy);\n\n  const renderHeader = columns => {\n    return /*#__PURE__*/_jsxDEV(\"tr\", {\n      children: columns && columns.length ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [headerGroups.map(col => {\n          formats.push({\n            format: \"text\",\n            dataField: col.dataField\n          });\n          return /*#__PURE__*/_jsxDEV(TableHeader, {\n            col: col\n          }, col.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 17\n          }, this);\n        }), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: /*#__PURE__*/_jsxDEV(FormattedMessage, {\n            id: \"userTable.edit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: /*#__PURE__*/_jsxDEV(FormattedMessage, {\n            id: \"userTable.delete\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true) : /*#__PURE__*/_jsxDEV(\"th\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this);\n  };\n\n  const renderBody = useCallback((data, sortDirection) => {\n    if (data && data.length > 0) {\n      return data.map(row => {\n        return /*#__PURE__*/_jsxDEV(TableBody, {\n          formats: formats,\n          row: row,\n          DATATYPE: DATA_TYPE,\n          callBack: callBack,\n          pathTo: path,\n          callBackEdit: callBackEdit,\n          callBackDelete: callBackDelete\n        }, row.serial || row.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 11\n        }, this);\n      });\n    } else return /*#__PURE__*/_jsxDEV(\"tr\", {\n      children: /*#__PURE__*/_jsxDEV(\"td\", {\n        align: \"center\",\n        colSpan: columns && columns.length > 0 ? columns.length : 1,\n        children: /*#__PURE__*/_jsxDEV(FormattedMessage, {\n          id: \"usersTable.noData\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 9\n    }, this);\n  }, [callBack, callBackDelete, callBackEdit, columns, formats, path]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(StyledTable, {\n      responsive: true,\n      className: className,\n      ...getTableProps(),\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: renderHeader(columns)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: renderBody(data)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n\n_s(Table, \"3Tr/siOCfKZ9Fk8RU3UyAuuH3jA=\", false, function () {\n  return [useTable];\n});\n\n_c = Table;\nTable.propTypes = {\n  columns: PropTypes.array,\n  data: PropTypes.array,\n  className: PropTypes.string,\n  callBack: PropTypes.func,\n  callBackEdit: PropTypes.func,\n  callBackDelete: PropTypes.func,\n  path: PropTypes.string\n};\nexport default Table;\n\nvar _c;\n\n$RefreshReg$(_c, \"Table\");","map":{"version":3,"sources":["/Users/agustinpardo/Desktop/challenge-wispro/client/src/components/Table/index.jsx"],"names":["React","useCallback","useTable","useSortBy","TableHeader","TableBody","PropTypes","FormattedMessage","StyledTable","DATA_TYPE","Table","columns","data","className","callBack","callBackEdit","callBackDelete","path","formats","getTableProps","getTableBodyProps","headerGroups","rows","prepareRow","renderHeader","length","map","col","push","format","dataField","id","renderBody","sortDirection","row","serial","propTypes","array","string","func"],"mappings":"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","sourcesContent":["import React, { useCallback } from \"react\";\nimport { useTable, useSortBy } from 'react-table'\nimport TableHeader from \"./TableHeader/TableHeader\";\nimport TableBody from \"./TableBody/TableBody\";\nimport PropTypes from \"prop-types\";\nimport { FormattedMessage } from \"react-intl\";\nimport { StyledTable } from \"./styledComponents\";\nimport { DATA_TYPE } from \"./constants\";\n\nconst Table = ({\n  columns,\n  data,\n  className,\n  callBack,\n  callBackEdit,\n  callBackDelete,\n  path,\n}) => {\n  const formats = [];\n  const {\n    getTableProps,\n    getTableBodyProps,\n    headerGroups,\n    rows,\n    prepareRow,\n  } = useTable(\n    {\n      columns,\n      data,\n    },\n    useSortBy\n  )\n  const renderHeader = (columns) => {\n    return (\n      <tr>\n        {columns && columns.length ? (\n          <>\n            {headerGroups.map((col) => {\n              formats.push({ format: \"text\", dataField: col.dataField });\n              return (\n                <TableHeader\n                  key={col.id}\n                  col={col}\n                />\n              );\n            })}\n            <td>\n              <FormattedMessage id={\"userTable.edit\"} />\n            </td>\n            <td>\n              <FormattedMessage id={\"userTable.delete\"} />\n            </td>\n          </>\n        ) : (\n          <th />\n        )}\n      </tr>\n    );\n  };\n\n  const renderBody = useCallback((data, sortDirection) => {\n    if (data && data.length > 0) {\n      return data.map((row) => {\n        return (\n          <TableBody\n            key={row.serial || row.id}\n            formats={formats}\n            row={row}\n            DATATYPE={DATA_TYPE}\n            callBack={callBack}\n            pathTo={path}\n            callBackEdit={callBackEdit}\n            callBackDelete={callBackDelete}\n          />\n        );\n      });\n    } else\n      return (\n        <tr>\n          <td\n            align={\"center\"}\n            colSpan={columns && columns.length > 0 ? columns.length : 1}\n          >\n            <FormattedMessage id=\"usersTable.noData\" />\n          </td>\n        </tr>\n      );\n  },[callBack, callBackDelete, callBackEdit, columns, formats, path]);\n\n  return (\n    <>\n      <StyledTable responsive className={className} {...getTableProps()}>\n        <thead>{renderHeader(columns)}</thead>\n        <tbody>{renderBody(data)}</tbody>\n      </StyledTable>\n    </>\n  );\n};\n\nTable.propTypes = {\n  columns: PropTypes.array,\n  data: PropTypes.array,\n  className: PropTypes.string,\n  callBack: PropTypes.func,\n  callBackEdit: PropTypes.func,\n  callBackDelete: PropTypes.func,\n  path: PropTypes.string,\n};\n\nexport default Table;\n"]},"metadata":{},"sourceType":"module"}