{"ast":null,"code":"var _jsxFileName = \"/Users/agustinpardo/Desktop/challenge-wispro/client/src/components/Select/index.jsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { Form } from \"react-bootstrap\";\nimport { FormattedMessage, useIntl } from \"react-intl\";\nimport { StyledSelectContainer } from \"./styled-components\";\nimport PropTypes from \"prop-types\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Select = ({\n  options,\n  title,\n  handleSelectOption,\n  icon,\n  disableTranslation\n}) => {\n  _s();\n\n  const intl = useIntl();\n  return /*#__PURE__*/_jsxDEV(StyledSelectContainer, {\n    children: /*#__PURE__*/_jsxDEV(Form, {\n      children: /*#__PURE__*/_jsxDEV(Form.Group, {\n        controlId: \"exampleForm.SelectCustomSizeSm\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: title && /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [icon && icon, \" \", /*#__PURE__*/_jsxDEV(FormattedMessage, {\n              id: title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 22,\n              columnNumber: 32\n            }, this)]\n          }, void 0, true)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          as: \"select\",\n          size: \"sm\",\n          custom: true,\n          onChange: handleSelectOption,\n          defaultValue: intl.messages[\"userFilter.select\"],\n          children: [options && options.map(option => {\n            const label = disableTranslation ? option.name : intl.messages[option.Header];\n            return /*#__PURE__*/_jsxDEV(\"option\", {\n              value: option.accessor,\n              children: option.Header\n            }, option.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 39,\n              columnNumber: 19\n            }, this);\n          }), /*#__PURE__*/_jsxDEV(\"option\", {\n            children: intl.messages[\"userFilter.select\"]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Select, \"rlSgSjbewJ1PrR/Ile8g/kr050o=\", false, function () {\n  return [useIntl];\n});\n\n_c = Select;\nSelect.propTypes = {\n  options: PropTypes.array,\n  title: PropTypes.string,\n  handleSelectOption: PropTypes.func,\n  icon: PropTypes.element,\n  disableTranslation: PropTypes.bool\n};\nexport default Select;\n\nvar _c;\n\n$RefreshReg$(_c, \"Select\");","map":{"version":3,"sources":["/Users/agustinpardo/Desktop/challenge-wispro/client/src/components/Select/index.jsx"],"names":["React","Form","FormattedMessage","useIntl","StyledSelectContainer","PropTypes","Select","options","title","handleSelectOption","icon","disableTranslation","intl","messages","map","option","label","name","Header","accessor","id","propTypes","array","string","func","element","bool"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,IAAT,QAAqB,iBAArB;AACA,SAASC,gBAAT,EAA2BC,OAA3B,QAA0C,YAA1C;AACA,SAASC,qBAAT,QAAsC,qBAAtC;AACA,OAAOC,SAAP,MAAsB,YAAtB;;;;AAEA,MAAMC,MAAM,GAAG,CAAC;AACdC,EAAAA,OADc;AAEdC,EAAAA,KAFc;AAGdC,EAAAA,kBAHc;AAIdC,EAAAA,IAJc;AAKdC,EAAAA;AALc,CAAD,KAMT;AAAA;;AACJ,QAAMC,IAAI,GAAGT,OAAO,EAApB;AACA,sBACE,QAAC,qBAAD;AAAA,2BACE,QAAC,IAAD;AAAA,6BACE,QAAC,IAAD,CAAM,KAAN;AAAY,QAAA,SAAS,EAAC,gCAAtB;AAAA,gCACE,QAAC,IAAD,CAAM,KAAN;AAAA,oBACGK,KAAK,iBACJ;AAAA,uBACGE,IAAI,IAAIA,IADX,oBACiB,QAAC,gBAAD;AAAkB,cAAA,EAAE,EAAEF;AAAtB;AAAA;AAAA;AAAA;AAAA,oBADjB;AAAA;AAFJ;AAAA;AAAA;AAAA;AAAA,gBADF,eAQE,QAAC,IAAD,CAAM,OAAN;AACE,UAAA,EAAE,EAAC,QADL;AAEE,UAAA,IAAI,EAAC,IAFP;AAGE,UAAA,MAAM,MAHR;AAIE,UAAA,QAAQ,EAAEC,kBAJZ;AAKE,UAAA,YAAY,EAAEG,IAAI,CAACC,QAAL,CAAc,mBAAd,CALhB;AAAA,qBAOGN,OAAO,IACNA,OAAO,CAACO,GAAR,CAAaC,MAAD,IAAY;AACtB,kBAAMC,KAAK,GAAGL,kBAAkB,GAC5BI,MAAM,CAACE,IADqB,GAE5BL,IAAI,CAACC,QAAL,CAAcE,MAAM,CAACG,MAArB,CAFJ;AAGA,gCACE;AAEE,cAAA,KAAK,EAAEH,MAAM,CAACI,QAFhB;AAAA,wBAIGJ,MAAM,CAACG;AAJV,eACOH,MAAM,CAACK,EADd;AAAA;AAAA;AAAA;AAAA,oBADF;AAQD,WAZD,CARJ,eAqBE;AAAA,sBAASR,IAAI,CAACC,QAAL,CAAc,mBAAd;AAAT;AAAA;AAAA;AAAA;AAAA,kBArBF;AAAA;AAAA;AAAA;AAAA;AAAA,gBARF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAsCD,CA9CD;;GAAMP,M;UAOSH,O;;;KAPTG,M;AAgDNA,MAAM,CAACe,SAAP,GAAmB;AACjBd,EAAAA,OAAO,EAAEF,SAAS,CAACiB,KADF;AAEjBd,EAAAA,KAAK,EAAEH,SAAS,CAACkB,MAFA;AAGjBd,EAAAA,kBAAkB,EAAEJ,SAAS,CAACmB,IAHb;AAIjBd,EAAAA,IAAI,EAAEL,SAAS,CAACoB,OAJC;AAKjBd,EAAAA,kBAAkB,EAAEN,SAAS,CAACqB;AALb,CAAnB;AAQA,eAAepB,MAAf","sourcesContent":["import React from \"react\";\nimport { Form } from \"react-bootstrap\";\nimport { FormattedMessage, useIntl } from \"react-intl\";\nimport { StyledSelectContainer } from \"./styled-components\";\nimport PropTypes from \"prop-types\";\n\nconst Select = ({\n  options,\n  title,\n  handleSelectOption,\n  icon,\n  disableTranslation,\n}) => {\n  const intl = useIntl();\n  return (\n    <StyledSelectContainer>\n      <Form>\n        <Form.Group controlId=\"exampleForm.SelectCustomSizeSm\">\n          <Form.Label>\n            {title && (\n              <>\n                {icon && icon} <FormattedMessage id={title} />\n              </>\n            )}\n          </Form.Label>\n          <Form.Control\n            as=\"select\"\n            size=\"sm\"\n            custom\n            onChange={handleSelectOption}\n            defaultValue={intl.messages[\"userFilter.select\"]}\n          >\n            {options &&\n              options.map((option) => {\n                const label = disableTranslation\n                  ? option.name\n                  : intl.messages[option.Header];\n                return (\n                  <option\n                    key={option.id}\n                    value={option.accessor}\n                  >\n                    {option.Header}\n                  </option>\n                );\n              })}\n            <option>{intl.messages[\"userFilter.select\"]}</option>\n          </Form.Control>\n        </Form.Group>\n      </Form>\n    </StyledSelectContainer>\n  );\n};\n\nSelect.propTypes = {\n  options: PropTypes.array,\n  title: PropTypes.string,\n  handleSelectOption: PropTypes.func,\n  icon: PropTypes.element,\n  disableTranslation: PropTypes.bool,\n};\n\nexport default Select;\n"]},"metadata":{},"sourceType":"module"}