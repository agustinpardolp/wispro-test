{"ast":null,"code":"var _jsxFileName = \"/Users/agustinpardo/Desktop/challenge-wispro/Client/src/components/Table/index.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useCallback, useState } from \"react\";\nimport TableHeader from \"./TableHeader/TableHeader\";\nimport TableBody from \"./TableBody/TableBody\";\nimport PropTypes from \"prop-types\";\nimport { FormattedMessage } from \"react-intl\";\nimport { StyledTable } from \"./styledComponents\";\nimport { DATA_TYPE } from \"./constants\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Table = ({\n  columns,\n  data,\n  className,\n  callBack,\n  callBackEdit,\n  callBackDelete,\n  path\n}) => {\n  _s();\n\n  console.log(data);\n  const formats = [];\n  const [sortDirection, setSortDirection] = useState(false); // const handleSort = (list, key, order) => {\n  //   console.log(list, key);\n  //   debugger;\n  //   let orderList = list.sort((a, b) =>\n  //     a[key] < b[key] ? -1 : a[key] > b[key] ? 1 : 0\n  //   );\n  //   console.log(orderList);\n  //   return orderList;\n  //   // return list.sort((a, b) => {\n  //   //   const { x, y } = order\n  //   //     ? { x: a[key], y: b[key] }\n  //   //     : { x: b[key], y: a[key] };\n  //   //   return x.toLowerCase() > y.toLowerCase() ? 1 : -1;\n  // };\n\n  const handleSortDirection = (sortDirection, columnKey) => {\n    debugger;\n    setSortDirection(!sortDirection);\n  };\n\n  const renderHeader = columns => {\n    return /*#__PURE__*/_jsxDEV(\"tr\", {\n      children: columns && columns.length ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [columns.map(col => {\n          formats.push({\n            format: \"text\",\n            dataField: col.dataField\n          });\n          return /*#__PURE__*/_jsxDEV(TableHeader, {\n            col: col,\n            onHandleSort: handleSortDirection,\n            sortDirection: sortDirection\n          }, col.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 17\n          }, this);\n        }), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: /*#__PURE__*/_jsxDEV(FormattedMessage, {\n            id: \"userTable.edit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: /*#__PURE__*/_jsxDEV(FormattedMessage, {\n            id: \"userTable.delete\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true) : /*#__PURE__*/_jsxDEV(\"th\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this);\n  };\n\n  const renderBody = useCallback((data, sortDirection) => {\n    console.log(sortDirection);\n    data = sortDirection ? data.reverse() : data;\n\n    if (data && data.length > 0) {\n      return data.map(row => {\n        return /*#__PURE__*/_jsxDEV(TableBody, {\n          formats: formats,\n          row: row,\n          DATATYPE: DATA_TYPE,\n          callBack: callBack,\n          pathTo: path,\n          callBackEdit: callBackEdit,\n          callBackDelete: callBackDelete\n        }, row.serial || row.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 11\n        }, this);\n      });\n    } else return /*#__PURE__*/_jsxDEV(\"tr\", {\n      children: /*#__PURE__*/_jsxDEV(\"td\", {\n        align: \"center\",\n        colSpan: columns && columns.length > 0 ? columns.length : 1,\n        children: /*#__PURE__*/_jsxDEV(FormattedMessage, {\n          id: \"usersTable.noData\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 9\n    }, this);\n  }, [callBack, callBackDelete, callBackEdit, columns, formats, path]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(StyledTable, {\n      responsive: true,\n      className: className,\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: renderHeader(columns)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: renderBody(data, sortDirection)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n\n_s(Table, \"logZyjUCUQHn+1tFwNLr4JCNcDk=\");\n\n_c = Table;\nTable.propTypes = {\n  columns: PropTypes.array,\n  data: PropTypes.array,\n  className: PropTypes.string,\n  callBack: PropTypes.func,\n  callBackEdit: PropTypes.func,\n  callBackDelete: PropTypes.func,\n  path: PropTypes.string\n};\nexport default Table;\n\nvar _c;\n\n$RefreshReg$(_c, \"Table\");","map":{"version":3,"sources":["/Users/agustinpardo/Desktop/challenge-wispro/Client/src/components/Table/index.jsx"],"names":["React","useCallback","useState","TableHeader","TableBody","PropTypes","FormattedMessage","StyledTable","DATA_TYPE","Table","columns","data","className","callBack","callBackEdit","callBackDelete","path","console","log","formats","sortDirection","setSortDirection","handleSortDirection","columnKey","renderHeader","length","map","col","push","format","dataField","id","renderBody","reverse","row","serial","propTypes","array","string","func"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,WAAhB,EAA6BC,QAA7B,QAA6C,OAA7C;AACA,OAAOC,WAAP,MAAwB,2BAAxB;AACA,OAAOC,SAAP,MAAsB,uBAAtB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,gBAAT,QAAiC,YAAjC;AACA,SAASC,WAAT,QAA4B,oBAA5B;AACA,SAASC,SAAT,QAA0B,aAA1B;;;;AAEA,MAAMC,KAAK,GAAG,CAAC;AACbC,EAAAA,OADa;AAEbC,EAAAA,IAFa;AAGbC,EAAAA,SAHa;AAIbC,EAAAA,QAJa;AAKbC,EAAAA,YALa;AAMbC,EAAAA,cANa;AAObC,EAAAA;AAPa,CAAD,KAQR;AAAA;;AACJC,EAAAA,OAAO,CAACC,GAAR,CAAYP,IAAZ;AACA,QAAMQ,OAAO,GAAG,EAAhB;AACA,QAAM,CAACC,aAAD,EAAgBC,gBAAhB,IAAoCnB,QAAQ,CAAC,KAAD,CAAlD,CAHI,CAIJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,QAAMoB,mBAAmB,GAAG,CAACF,aAAD,EAAgBG,SAAhB,KAA8B;AACxD;AACAF,IAAAA,gBAAgB,CAAC,CAACD,aAAF,CAAhB;AACD,GAHD;;AAIA,QAAMI,YAAY,GAAId,OAAD,IAAa;AAChC,wBACE;AAAA,gBACGA,OAAO,IAAIA,OAAO,CAACe,MAAnB,gBACC;AAAA,mBACGf,OAAO,CAACgB,GAAR,CAAaC,GAAD,IAAS;AACpBR,UAAAA,OAAO,CAACS,IAAR,CAAa;AAAEC,YAAAA,MAAM,EAAE,MAAV;AAAkBC,YAAAA,SAAS,EAAEH,GAAG,CAACG;AAAjC,WAAb;AACA,8BACE,QAAC,WAAD;AAEE,YAAA,GAAG,EAAEH,GAFP;AAGE,YAAA,YAAY,EAAEL,mBAHhB;AAIE,YAAA,aAAa,EAAEF;AAJjB,aACOO,GAAG,CAACI,EADX;AAAA;AAAA;AAAA;AAAA,kBADF;AAQD,SAVA,CADH,eAYE;AAAA,iCACE,QAAC,gBAAD;AAAkB,YAAA,EAAE,EAAE;AAAtB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBAZF,eAeE;AAAA,iCACE,QAAC,gBAAD;AAAkB,YAAA,EAAE,EAAE;AAAtB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBAfF;AAAA,sBADD,gBAqBC;AAAA;AAAA;AAAA;AAAA;AAtBJ;AAAA;AAAA;AAAA;AAAA,YADF;AA2BD,GA5BD;;AA8BA,QAAMC,UAAU,GAAG/B,WAAW,CAAC,CAACU,IAAD,EAAOS,aAAP,KAAyB;AACtDH,IAAAA,OAAO,CAACC,GAAR,CAAYE,aAAZ;AACAT,IAAAA,IAAI,GAAGS,aAAa,GAAGT,IAAI,CAACsB,OAAL,EAAH,GAAoBtB,IAAxC;;AACA,QAAIA,IAAI,IAAIA,IAAI,CAACc,MAAL,GAAc,CAA1B,EAA6B;AAC3B,aAAOd,IAAI,CAACe,GAAL,CAAUQ,GAAD,IAAS;AACvB,4BACE,QAAC,SAAD;AAEE,UAAA,OAAO,EAAEf,OAFX;AAGE,UAAA,GAAG,EAAEe,GAHP;AAIE,UAAA,QAAQ,EAAE1B,SAJZ;AAKE,UAAA,QAAQ,EAAEK,QALZ;AAME,UAAA,MAAM,EAAEG,IANV;AAOE,UAAA,YAAY,EAAEF,YAPhB;AAQE,UAAA,cAAc,EAAEC;AARlB,WACOmB,GAAG,CAACC,MAAJ,IAAcD,GAAG,CAACH,EADzB;AAAA;AAAA;AAAA;AAAA,gBADF;AAYD,OAbM,CAAP;AAcD,KAfD,MAgBE,oBACE;AAAA,6BACE;AACE,QAAA,KAAK,EAAE,QADT;AAEE,QAAA,OAAO,EAAErB,OAAO,IAAIA,OAAO,CAACe,MAAR,GAAiB,CAA5B,GAAgCf,OAAO,CAACe,MAAxC,GAAiD,CAF5D;AAAA,+BAIE,QAAC,gBAAD;AAAkB,UAAA,EAAE,EAAC;AAArB;AAAA;AAAA;AAAA;AAAA;AAJF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF;AAUH,GA7B6B,EA6B5B,CAACZ,QAAD,EAAWE,cAAX,EAA2BD,YAA3B,EAAyCJ,OAAzC,EAAkDS,OAAlD,EAA2DH,IAA3D,CA7B4B,CAA9B;AA+BA,sBACE;AAAA,2BACE,QAAC,WAAD;AAAa,MAAA,UAAU,MAAvB;AAAwB,MAAA,SAAS,EAAEJ,SAAnC;AAAA,8BACE;AAAA,kBAAQY,YAAY,CAACd,OAAD;AAApB;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAA,kBAAQsB,UAAU,CAACrB,IAAD,EAAOS,aAAP;AAAlB;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF,mBADF;AAQD,CApGD;;GAAMX,K;;KAAAA,K;AAsGNA,KAAK,CAAC2B,SAAN,GAAkB;AAChB1B,EAAAA,OAAO,EAAEL,SAAS,CAACgC,KADH;AAEhB1B,EAAAA,IAAI,EAAEN,SAAS,CAACgC,KAFA;AAGhBzB,EAAAA,SAAS,EAAEP,SAAS,CAACiC,MAHL;AAIhBzB,EAAAA,QAAQ,EAAER,SAAS,CAACkC,IAJJ;AAKhBzB,EAAAA,YAAY,EAAET,SAAS,CAACkC,IALR;AAMhBxB,EAAAA,cAAc,EAAEV,SAAS,CAACkC,IANV;AAOhBvB,EAAAA,IAAI,EAAEX,SAAS,CAACiC;AAPA,CAAlB;AAUA,eAAe7B,KAAf","sourcesContent":["import React, { useCallback, useState } from \"react\";\nimport TableHeader from \"./TableHeader/TableHeader\";\nimport TableBody from \"./TableBody/TableBody\";\nimport PropTypes from \"prop-types\";\nimport { FormattedMessage } from \"react-intl\";\nimport { StyledTable } from \"./styledComponents\";\nimport { DATA_TYPE } from \"./constants\";\n\nconst Table = ({\n  columns,\n  data,\n  className,\n  callBack,\n  callBackEdit,\n  callBackDelete,\n  path,\n}) => {\n  console.log(data);\n  const formats = [];\n  const [sortDirection, setSortDirection] = useState(false);\n  // const handleSort = (list, key, order) => {\n  //   console.log(list, key);\n  //   debugger;\n  //   let orderList = list.sort((a, b) =>\n  //     a[key] < b[key] ? -1 : a[key] > b[key] ? 1 : 0\n  //   );\n  //   console.log(orderList);\n  //   return orderList;\n  //   // return list.sort((a, b) => {\n  //   //   const { x, y } = order\n  //   //     ? { x: a[key], y: b[key] }\n  //   //     : { x: b[key], y: a[key] };\n  //   //   return x.toLowerCase() > y.toLowerCase() ? 1 : -1;\n  // };\n\n  const handleSortDirection = (sortDirection, columnKey) => {\n    debugger;\n    setSortDirection(!sortDirection);\n  };\n  const renderHeader = (columns) => {\n    return (\n      <tr>\n        {columns && columns.length ? (\n          <>\n            {columns.map((col) => {\n              formats.push({ format: \"text\", dataField: col.dataField });\n              return (\n                <TableHeader\n                  key={col.id}\n                  col={col}\n                  onHandleSort={handleSortDirection}\n                  sortDirection={sortDirection}\n                />\n              );\n            })}\n            <td>\n              <FormattedMessage id={\"userTable.edit\"} />\n            </td>\n            <td>\n              <FormattedMessage id={\"userTable.delete\"} />\n            </td>\n          </>\n        ) : (\n          <th />\n        )}\n      </tr>\n    );\n  };\n\n  const renderBody = useCallback((data, sortDirection) => {\n    console.log(sortDirection);\n    data = sortDirection ? data.reverse() : data;\n    if (data && data.length > 0) {\n      return data.map((row) => {\n        return (\n          <TableBody\n            key={row.serial || row.id}\n            formats={formats}\n            row={row}\n            DATATYPE={DATA_TYPE}\n            callBack={callBack}\n            pathTo={path}\n            callBackEdit={callBackEdit}\n            callBackDelete={callBackDelete}\n          />\n        );\n      });\n    } else\n      return (\n        <tr>\n          <td\n            align={\"center\"}\n            colSpan={columns && columns.length > 0 ? columns.length : 1}\n          >\n            <FormattedMessage id=\"usersTable.noData\" />\n          </td>\n        </tr>\n      );\n  },[callBack, callBackDelete, callBackEdit, columns, formats, path]);\n\n  return (\n    <>\n      <StyledTable responsive className={className}>\n        <thead>{renderHeader(columns)}</thead>\n        <tbody>{renderBody(data, sortDirection)}</tbody>\n      </StyledTable>\n    </>\n  );\n};\n\nTable.propTypes = {\n  columns: PropTypes.array,\n  data: PropTypes.array,\n  className: PropTypes.string,\n  callBack: PropTypes.func,\n  callBackEdit: PropTypes.func,\n  callBackDelete: PropTypes.func,\n  path: PropTypes.string,\n};\n\nexport default Table;\n"]},"metadata":{},"sourceType":"module"}