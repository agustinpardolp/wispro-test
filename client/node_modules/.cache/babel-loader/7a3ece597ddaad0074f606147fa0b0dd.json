{"ast":null,"code":"var _jsxFileName = \"/Users/agustinpardo/Desktop/challenge-wispro/client/src/components/Table/index.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useCallback } from \"react\";\nimport { useTable, useSortBy } from 'react-table';\nimport TableHeader from \"./TableHeader/TableHeader\";\nimport TableBody from \"./TableBody/TableBody\";\nimport PropTypes from \"prop-types\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport { FormattedMessage } from \"react-intl\";\nimport { StyledTable, StyledTd } from \"./styledComponents\";\nimport { DATA_TYPE } from \"./constants\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faTrashAlt, faEdit } from \"@fortawesome/free-solid-svg-icons\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Table = ({\n  columns,\n  data,\n  className,\n  callBack,\n  callBackEdit,\n  callBackDelete,\n  path\n}) => {\n  _s();\n\n  const formats = [];\n  const {\n    getTableProps,\n    getTableBodyProps,\n    headerGroups,\n    rows,\n    prepareRow\n  } = useTable({\n    columns,\n    data\n  }, useSortBy);\n\n  const renderHeader = columns => {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: headerGroups.map(headerGroup => /*#__PURE__*/_jsxDEV(\"tr\", { ...headerGroup.getHeaderGroupProps(),\n        children: headerGroup.headers.map(column =>\n        /*#__PURE__*/\n        // Add the sorting props to control sorting. For this example\n        // we can add them into the header props\n        _jsxDEV(\"th\", { ...column.getHeaderProps(column.getSortByToggleProps()),\n          children: [column.render('Header'), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: column.isSorted ? column.isSortedDesc ? ' ðŸ”½' : ' ðŸ”¼' : ''\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 17\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 13\n      }, this))\n    }, void 0, false);\n  };\n\n  const renderBody = useCallback((data, sortDirection) => {\n    if (data && data.length > 0) {\n      return data.map(row => {\n        prepareRow(row);\n        console.log(row);\n        return /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(StyledTd, {\n            children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n              icon: faEdit,\n              onClick: () => callBackEdit(row)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 96,\n              columnNumber: 9\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(StyledTd, {\n            children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n              icon: faTrashAlt,\n              onClick: () => callBackDelete(row)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 99,\n              columnNumber: 9\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 7\n          }, this)]\n        }, uuidv4(), true, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 11\n        }, this) // <TableBody\n        //   key={row.serial || row.id}\n        //   formats={formats}\n        //   row={row}\n        //   DATATYPE={DATA_TYPE}\n        //   callBack={callBack}\n        //   pathTo={path}\n        //   callBackEdit={callBackEdit}\n        //   callBackDelete={callBackDelete}\n        // />\n        ;\n      });\n    } else return /*#__PURE__*/_jsxDEV(\"tr\", {\n      children: /*#__PURE__*/_jsxDEV(\"td\", {\n        align: \"center\",\n        colSpan: columns && columns.length > 0 ? columns.length : 1,\n        children: /*#__PURE__*/_jsxDEV(FormattedMessage, {\n          id: \"usersTable.noData\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 9\n    }, this);\n  }, [callBack, callBackDelete, callBackEdit, columns, formats, path]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(StyledTable, {\n      responsive: true,\n      className: className,\n      ...getTableProps(),\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: renderHeader(columns)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: renderBody(data)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n\n_s(Table, \"3Tr/siOCfKZ9Fk8RU3UyAuuH3jA=\", false, function () {\n  return [useTable];\n});\n\n_c = Table;\nTable.propTypes = {\n  columns: PropTypes.array,\n  data: PropTypes.array,\n  className: PropTypes.string,\n  callBack: PropTypes.func,\n  callBackEdit: PropTypes.func,\n  callBackDelete: PropTypes.func,\n  path: PropTypes.string\n};\nexport default Table;\n\nvar _c;\n\n$RefreshReg$(_c, \"Table\");","map":{"version":3,"sources":["/Users/agustinpardo/Desktop/challenge-wispro/client/src/components/Table/index.jsx"],"names":["React","useCallback","useTable","useSortBy","TableHeader","TableBody","PropTypes","v4","uuidv4","FormattedMessage","StyledTable","StyledTd","DATA_TYPE","FontAwesomeIcon","faTrashAlt","faEdit","Table","columns","data","className","callBack","callBackEdit","callBackDelete","path","formats","getTableProps","getTableBodyProps","headerGroups","rows","prepareRow","renderHeader","map","headerGroup","getHeaderGroupProps","headers","column","getHeaderProps","getSortByToggleProps","render","isSorted","isSortedDesc","renderBody","sortDirection","length","row","console","log","propTypes","array","string","func"],"mappings":"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","sourcesContent":["import React, { useCallback } from \"react\";\nimport { useTable, useSortBy } from 'react-table'\nimport TableHeader from \"./TableHeader/TableHeader\";\nimport TableBody from \"./TableBody/TableBody\";\nimport PropTypes from \"prop-types\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport { FormattedMessage } from \"react-intl\";\nimport { StyledTable, StyledTd } from \"./styledComponents\";\nimport { DATA_TYPE } from \"./constants\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faTrashAlt, faEdit } from \"@fortawesome/free-solid-svg-icons\";\n\nconst Table = ({\n  columns,\n  data,\n  className,\n  callBack,\n  callBackEdit,\n  callBackDelete,\n  path,\n}) => {\n  const formats = [];\n  const {\n    getTableProps,\n    getTableBodyProps,\n    headerGroups,\n    rows,\n    prepareRow,\n  } = useTable(\n    {\n      columns,\n      data,\n    },\n    useSortBy\n  )\n  const renderHeader = (columns) => {\n    return (\n      <>\n         {headerGroups.map(headerGroup => (\n            <tr {...headerGroup.getHeaderGroupProps()}>\n              {headerGroup.headers.map(column => (\n                // Add the sorting props to control sorting. For this example\n                // we can add them into the header props\n                <th {...column.getHeaderProps(column.getSortByToggleProps())}>\n                  {column.render('Header')}\n                  {/* Add a sort direction indicator */}\n                  <span>\n                    {column.isSorted\n                      ? column.isSortedDesc\n                        ? ' ðŸ”½'\n                        : ' ðŸ”¼'\n                      : ''}\n                  </span>\n                </th>\n              ))}\n            </tr>\n          ))}\n        {/* {headerGroups && headerGroups.length ? (\n          <>\n            {headerGroups.map((col) => {\n              formats.push({ format: \"text\", dataField: col.dataField });\n              return (\n                <TableHeader\n                  key={col.id}\n                  col={col}\n                />\n              );\n            })}\n            <td>\n              <FormattedMessage id={\"userTable.edit\"} />\n            </td>\n            <td>\n              <FormattedMessage id={\"userTable.delete\"} />\n            </td>\n          </>\n        ) : (\n          <th />\n        )} */}\n      </>\n    );\n  };\n\n  const renderBody = useCallback((data, sortDirection) => {\n    if (data && data.length > 0) {\n      return data.map((row) => {\n        prepareRow(row);\n        console.log(row);\n        return (\n          <tr  key={uuidv4()} >\n      {/* {row.cells.map((cell) => {\n        console.log(\"cell\", cell)\n        return <td {...cell.getCellProps()}>{cell.render(\"Cell\")}</td>;\n      })} */}\n      {/* {formats && formats.map((format) => rowDataHandler(format, row))} */}\n      <StyledTd>\n        <FontAwesomeIcon icon={faEdit} onClick={() => callBackEdit(row)} />\n      </StyledTd>\n      <StyledTd>\n        <FontAwesomeIcon\n          icon={faTrashAlt}\n          onClick={() => callBackDelete(row)}\n        />\n      </StyledTd>\n    </tr>\n          // <TableBody\n          //   key={row.serial || row.id}\n          //   formats={formats}\n          //   row={row}\n          //   DATATYPE={DATA_TYPE}\n          //   callBack={callBack}\n          //   pathTo={path}\n          //   callBackEdit={callBackEdit}\n          //   callBackDelete={callBackDelete}\n            \n          // />\n        );\n      });\n    } else\n      return (\n        <tr>\n          <td\n            align={\"center\"}\n            colSpan={columns && columns.length > 0 ? columns.length : 1}\n          >\n            <FormattedMessage id=\"usersTable.noData\" />\n          </td>\n        </tr>\n      );\n  },[callBack, callBackDelete, callBackEdit, columns, formats, path]);\n\n  return (\n    <>\n      <StyledTable responsive className={className} {...getTableProps()}>\n        <thead>{renderHeader(columns)}</thead>\n        <tbody>{renderBody(data)}</tbody>\n      </StyledTable>\n    </>\n  );\n};\n\nTable.propTypes = {\n  columns: PropTypes.array,\n  data: PropTypes.array,\n  className: PropTypes.string,\n  callBack: PropTypes.func,\n  callBackEdit: PropTypes.func,\n  callBackDelete: PropTypes.func,\n  path: PropTypes.string,\n};\n\nexport default Table;\n"]},"metadata":{},"sourceType":"module"}