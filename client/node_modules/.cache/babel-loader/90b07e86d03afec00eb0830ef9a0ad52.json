{"ast":null,"code":"import { app } from \"../config/fireBaseConfig\";\n\nconst login = async (username, password, rememberUser) => {\n  let response = await app.auth().signInWithEmailAndPassword(username, password);\n  console.log(response);\n\n  if (response && response.user.uid) {\n    if (rememberUser) {\n      localStorage.setItem(\"token_data\", JSON.stringify(response.user.uid));\n      return response;\n    } else return response;\n  } else throw Error(\"invalid user\");\n};\n\nconst logout = dispatchToStore => {\n  localStorage.removeItem(\"token_data\");\n  return dispatchToStore;\n};\n\nexport const authServices = {\n  login,\n  logout\n};","map":{"version":3,"sources":["/Users/agustinpardo/Desktop/challenge-wispro/Client/src/services/authServices.js"],"names":["app","login","username","password","rememberUser","response","auth","signInWithEmailAndPassword","console","log","user","uid","localStorage","setItem","JSON","stringify","Error","logout","dispatchToStore","removeItem","authServices"],"mappings":"AAAA,SAAUA,GAAV,QAAqB,0BAArB;;AAEA,MAAMC,KAAK,GAAG,OAAOC,QAAP,EAAiBC,QAAjB,EAA2BC,YAA3B,KAA4C;AACxD,MAAIC,QAAQ,GAAG,MAAML,GAAG,CAACM,IAAJ,GAAWC,0BAAX,CAAsCL,QAAtC,EAAgDC,QAAhD,CAArB;AACAK,EAAAA,OAAO,CAACC,GAAR,CAAYJ,QAAZ;;AACA,MAAIA,QAAQ,IAAIA,QAAQ,CAACK,IAAT,CAAcC,GAA9B,EAAmC;AACjC,QAAIP,YAAJ,EAAkB;AAChBQ,MAAAA,YAAY,CAACC,OAAb,CAAqB,YAArB,EAAmCC,IAAI,CAACC,SAAL,CAAeV,QAAQ,CAACK,IAAT,CAAcC,GAA7B,CAAnC;AACA,aAAON,QAAP;AACD,KAHD,MAGO,OAAOA,QAAP;AACR,GALD,MAKO,MAAMW,KAAK,CAAC,cAAD,CAAX;AACR,CATD;;AAWA,MAAMC,MAAM,GAAIC,eAAD,IAAqB;AAClCN,EAAAA,YAAY,CAACO,UAAb,CAAwB,YAAxB;AACA,SAAOD,eAAP;AACD,CAHD;;AAKA,OAAO,MAAME,YAAY,GAAG;AAAEnB,EAAAA,KAAF;AAASgB,EAAAA;AAAT,CAArB","sourcesContent":["import {  app } from \"../config/fireBaseConfig\";\n\nconst login = async (username, password, rememberUser) => {\n  let response = await app.auth().signInWithEmailAndPassword(username, password);\n  console.log(response);\n  if (response && response.user.uid) {\n    if (rememberUser) {\n      localStorage.setItem(\"token_data\", JSON.stringify(response.user.uid));\n      return response;\n    } else return response;\n  } else throw Error(\"invalid user\");\n};\n\nconst logout = (dispatchToStore) => {\n  localStorage.removeItem(\"token_data\");\n  return dispatchToStore;\n};\n\nexport const authServices = { login, logout };\n"]},"metadata":{},"sourceType":"module"}