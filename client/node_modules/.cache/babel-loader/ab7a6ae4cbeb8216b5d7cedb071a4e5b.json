{"ast":null,"code":"var _jsxFileName = \"/Users/agustinpardo/Desktop/challenge-wispro/client/src/components/Table/index.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useCallback } from \"react\";\nimport { useTable, useSortBy } from \"react-table\";\nimport TableHeader from \"./TableHeader/TableHeader\";\nimport TableBody from \"./TableBody/TableBody\";\nimport PropTypes from \"prop-types\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport { FormattedMessage } from \"react-intl\";\nimport { StyledTable, StyledTd } from \"./styledComponents\";\nimport { DATA_TYPE } from \"./constants\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faTrashAlt, faEdit } from \"@fortawesome/free-solid-svg-icons\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Table = ({\n  columns,\n  data,\n  className,\n  callBack,\n  callBackEdit,\n  callBackDelete,\n  path\n}) => {\n  _s();\n\n  const formats = [];\n  const {\n    getTableProps,\n    getTableBodyProps,\n    headerGroups,\n    rows,\n    prepareRow\n  } = useTable({\n    columns,\n    data\n  }, useSortBy);\n\n  const renderHeader = columns => {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: headerGroups.map(headerGroup => /*#__PURE__*/_jsxDEV(\"tr\", { ...headerGroup.getHeaderGroupProps(),\n        children: headerGroup.headers.map(column =>\n        /*#__PURE__*/\n        // Add the sorting props to control sorting. For this example\n        // we can add them into the header props\n        _jsxDEV(\"th\", { ...column.getHeaderProps(column.getSortByToggleProps()),\n          children: [column.render(\"Header\"), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: column.isSorted ? column.isSortedDesc ? \" ðŸ”½\" : \" ðŸ”¼\" : \"\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 11\n      }, this))\n    }, void 0, false);\n  };\n\n  const renderBody = useCallback((data, sortDirection) => {\n    /*#__PURE__*/\n    _jsxDEV(\"tbody\", { ...getTableBodyProps(),\n      children: data && data.map((row, i) => {\n        prepareRow(row);\n        return /*#__PURE__*/_jsxDEV(\"tr\", { ...row.getRowProps(),\n          children: row.cells.map(cell => {\n            return /*#__PURE__*/_jsxDEV(\"td\", { ...cell.getCellProps(),\n              children: cell.render(\"Cell\")\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 89,\n              columnNumber: 21\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 15\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this); // if (data && data.length > 0) {\n    //   return data.map((row) => {\n    //     prepareRow(row);\n    //     console.log(row);\n    //     return (\n    //       // <TableBody\n    //       //   key={row.serial || row.id}\n    //       //   formats={formats}\n    //       //   row={row}\n    //       //   DATATYPE={DATA_TYPE}\n    //       //   callBack={callBack}\n    //       //   pathTo={path}\n    //       //   callBackEdit={callBackEdit}\n    //       //   callBackDelete={callBackDelete}\n    //       // />\n    //     );\n    //   });\n    // } else\n    //   return (\n    //     <tr>\n    //       <td\n    //         align={\"center\"}\n    //         colSpan={columns && columns.length > 0 ? columns.length : 1}\n    //       >\n    //         <FormattedMessage id=\"usersTable.noData\" />\n    //       </td>\n    //     </tr>\n    //   );\n\n  }, [callBack, callBackDelete, callBackEdit, columns, formats, path]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(StyledTable, {\n      striped: true,\n      bordered: true,\n      hover: true,\n      size: \"sm\",\n      ...getTableProps(),\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: headerGroups.map(headerGroup => /*#__PURE__*/_jsxDEV(\"tr\", { ...headerGroup.getHeaderGroupProps(),\n          children: headerGroup.headers.map(column =>\n          /*#__PURE__*/\n          // Add the sorting props to control sorting. For this example\n          // we can add them into the header props\n          _jsxDEV(\"th\", { ...column.getHeaderProps(column.getSortByToggleProps()),\n            children: [column.render(\"Header\"), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: column.isSorted ? column.isSortedDesc ? \" ðŸ”½\" : \" ðŸ”¼\" : \"\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 141,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 138,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: rows.map((row, i) => {\n            prepareRow(row);\n            return /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: /*#__PURE__*/_jsxDEV(\"tr\", { ...row.getRowProps(),\n                onClick: callBack,\n                children: [row.cells.map(cell => {\n                  return /*#__PURE__*/_jsxDEV(\"td\", { ...cell.getCellProps(),\n                    children: cell.render(\"Cell\")\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 162,\n                    columnNumber: 25\n                  }, this);\n                }), /*#__PURE__*/_jsxDEV(StyledTd, {\n                  children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n                    icon: faEdit,\n                    onClick: () => {\n                      console.log(row);\n                      callBackEdit(row.original);\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 166,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 165,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(StyledTd, {\n                  children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n                    icon: faTrashAlt,\n                    onClick: () => callBackDelete(row.original)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 175,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 174,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 159,\n                columnNumber: 19\n              }, this)\n            }, void 0, false);\n          })\n        }, void 0, false)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n\n_s(Table, \"3Tr/siOCfKZ9Fk8RU3UyAuuH3jA=\", false, function () {\n  return [useTable];\n});\n\n_c = Table;\nTable.propTypes = {\n  columns: PropTypes.array,\n  data: PropTypes.array,\n  className: PropTypes.string,\n  callBack: PropTypes.func,\n  callBackEdit: PropTypes.func,\n  callBackDelete: PropTypes.func,\n  path: PropTypes.string\n};\nexport default Table;\n\nvar _c;\n\n$RefreshReg$(_c, \"Table\");","map":{"version":3,"sources":["/Users/agustinpardo/Desktop/challenge-wispro/client/src/components/Table/index.jsx"],"names":["React","useCallback","useTable","useSortBy","TableHeader","TableBody","PropTypes","v4","uuidv4","FormattedMessage","StyledTable","StyledTd","DATA_TYPE","FontAwesomeIcon","faTrashAlt","faEdit","Table","columns","data","className","callBack","callBackEdit","callBackDelete","path","formats","getTableProps","getTableBodyProps","headerGroups","rows","prepareRow","renderHeader","map","headerGroup","getHeaderGroupProps","headers","column","getHeaderProps","getSortByToggleProps","render","isSorted","isSortedDesc","renderBody","sortDirection","row","i","getRowProps","cells","cell","getCellProps","console","log","original","propTypes","array","string","func"],"mappings":"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","sourcesContent":["import React, { useCallback } from \"react\";\nimport { useTable, useSortBy } from \"react-table\";\nimport TableHeader from \"./TableHeader/TableHeader\";\nimport TableBody from \"./TableBody/TableBody\";\nimport PropTypes from \"prop-types\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport { FormattedMessage } from \"react-intl\";\nimport { StyledTable, StyledTd } from \"./styledComponents\";\nimport { DATA_TYPE } from \"./constants\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faTrashAlt, faEdit } from \"@fortawesome/free-solid-svg-icons\";\n\nconst Table = ({\n  columns,\n  data,\n  className,\n  callBack,\n  callBackEdit,\n  callBackDelete,\n  path,\n}) => {\n  const formats = [];\n  const {\n    getTableProps,\n    getTableBodyProps,\n    headerGroups,\n    rows,\n    prepareRow,\n  } = useTable(\n    {\n      columns,\n      data,\n    },\n    useSortBy\n  );\n  const renderHeader = (columns) => {\n    return (\n      <>\n        {headerGroups.map((headerGroup) => (\n          <tr {...headerGroup.getHeaderGroupProps()}>\n            {headerGroup.headers.map((column) => (\n              // Add the sorting props to control sorting. For this example\n              // we can add them into the header props\n              <th {...column.getHeaderProps(column.getSortByToggleProps())}>\n                {column.render(\"Header\")}\n                {/* Add a sort direction indicator */}\n                <span>\n                  {column.isSorted ? (column.isSortedDesc ? \" ðŸ”½\" : \" ðŸ”¼\") : \"\"}\n                </span>\n              </th>\n            ))}\n          </tr>\n        ))}\n        {/* {headerGroups && headerGroups.length ? (\n          <>\n            {headerGroups.map((col) => {\n              formats.push({ format: \"text\", dataField: col.dataField });\n              return (\n                <TableHeader\n                  key={col.id}\n                  col={col}\n                />\n              );\n            })}\n            <td>\n              <FormattedMessage id={\"userTable.edit\"} />\n            </td>\n            <td>\n              <FormattedMessage id={\"userTable.delete\"} />\n            </td>\n          </>\n        ) : (\n          <th />\n        )} */}\n      </>\n    );\n  };\n\n  const renderBody = useCallback(\n    (data, sortDirection) => {\n      <tbody {...getTableBodyProps()}>\n        {data &&\n          data.map((row, i) => {\n            prepareRow(row);\n            return (\n              <tr {...row.getRowProps()}>\n                {row.cells.map((cell) => {\n                  return (\n                    <td {...cell.getCellProps()}>{cell.render(\"Cell\")}</td>\n                  );\n                })}\n              </tr>\n            );\n          })}\n      </tbody>;\n      // if (data && data.length > 0) {\n      //   return data.map((row) => {\n      //     prepareRow(row);\n      //     console.log(row);\n      //     return (\n      //       // <TableBody\n      //       //   key={row.serial || row.id}\n      //       //   formats={formats}\n      //       //   row={row}\n      //       //   DATATYPE={DATA_TYPE}\n      //       //   callBack={callBack}\n      //       //   pathTo={path}\n      //       //   callBackEdit={callBackEdit}\n      //       //   callBackDelete={callBackDelete}\n\n      //       // />\n      //     );\n      //   });\n      // } else\n      //   return (\n      //     <tr>\n      //       <td\n      //         align={\"center\"}\n      //         colSpan={columns && columns.length > 0 ? columns.length : 1}\n      //       >\n      //         <FormattedMessage id=\"usersTable.noData\" />\n      //       </td>\n      //     </tr>\n      //   );\n    },\n    [callBack, callBackDelete, callBackEdit, columns, formats, path]\n  );\n\n  return (\n    <>\n      <StyledTable striped bordered hover size=\"sm\" {...getTableProps()}>\n        <thead>\n          {headerGroups.map((headerGroup) => (\n            <tr {...headerGroup.getHeaderGroupProps()}>\n              {headerGroup.headers.map((column) => (\n                // Add the sorting props to control sorting. For this example\n                // we can add them into the header props\n                <th {...column.getHeaderProps(column.getSortByToggleProps())}>\n                  {column.render(\"Header\")}\n                  {/* Add a sort direction indicator */}\n                  <span>\n                    {column.isSorted\n                      ? column.isSortedDesc\n                        ? \" ðŸ”½\"\n                        : \" ðŸ”¼\"\n                      : \"\"}\n                  </span>\n                </th>\n              ))}\n            </tr>\n          ))}\n        </thead>\n        <tbody>\n          <>\n            {rows.map((row, i) => {\n              prepareRow(row);\n              return (\n                <>\n                  <tr {...row.getRowProps()} onClick={callBack}>\n                    {row.cells.map((cell) => {\n                      return (\n                        <td {...cell.getCellProps()}>{cell.render(\"Cell\")}</td>\n                      );\n                    })}\n                    <StyledTd>\n                      <FontAwesomeIcon\n                        icon={faEdit}\n                        onClick={() => {\n                          console.log(row);\n                          callBackEdit(row.original);\n                        }}\n                      />\n                    </StyledTd>\n                    <StyledTd>\n                      <FontAwesomeIcon\n                        icon={faTrashAlt}\n                        onClick={() => callBackDelete(row.original)}\n                      />\n                    </StyledTd>\n                  </tr>\n                </>\n              );\n            })}\n          </>\n        </tbody>\n      </StyledTable>\n      {/* <StyledTable responsive className={className} {...getTableProps()}>\n        <thead>{renderHeader(columns)}</thead>\n        <tbody {...getTableBodyProps()}>{renderBody(data)}</tbody>\n      </StyledTable> */}\n    </>\n  );\n};\n\nTable.propTypes = {\n  columns: PropTypes.array,\n  data: PropTypes.array,\n  className: PropTypes.string,\n  callBack: PropTypes.func,\n  callBackEdit: PropTypes.func,\n  callBackDelete: PropTypes.func,\n  path: PropTypes.string,\n};\n\nexport default Table;\n"]},"metadata":{},"sourceType":"module"}