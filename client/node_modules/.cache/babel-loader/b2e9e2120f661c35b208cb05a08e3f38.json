{"ast":null,"code":"var _jsxFileName = \"/Users/agustinpardo/Desktop/challenge-wispro/Client/src/components/Modal/index.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useContext } from \"react\";\nimport { Modal } from \"react-bootstrap\";\nimport { ModalContext } from \"../../context/ModalContext\";\nimport { MODALS } from \"./constants\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction BasicModal() {\n  _s();\n\n  let {\n    modalType,\n    modalProps,\n    dispatch\n  } = useContext(ModalContext);\n  const ModularModal = MODALS[modalType];\n\n  if (modalType) {\n    return /*#__PURE__*/_jsxDEV(Modal, {\n      size: modalProps.size,\n      show: modalProps.open,\n      onHide: () => dispatch({\n        type: \"hide\"\n      }),\n      children: /*#__PURE__*/_jsxDEV(ModularModal, {\n        dispatch: dispatch,\n        ...modalProps\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }, this);\n  } else return null;\n}\n\n_s(BasicModal, \"qGyiCJzngHlclgItAyQYx/SYsJk=\");\n\n_c = BasicModal;\nexport default BasicModal;\n\nvar _c;\n\n$RefreshReg$(_c, \"BasicModal\");","map":{"version":3,"sources":["/Users/agustinpardo/Desktop/challenge-wispro/Client/src/components/Modal/index.jsx"],"names":["React","useContext","Modal","ModalContext","MODALS","BasicModal","modalType","modalProps","dispatch","ModularModal","size","open","type"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AACA,SAASC,KAAT,QAAsB,iBAAtB;AAEA,SAASC,YAAT,QAA6B,4BAA7B;AAEA,SAASC,MAAT,QAAuB,aAAvB;;;AAEA,SAASC,UAAT,GAAsB;AAAA;;AACpB,MAAI;AAAEC,IAAAA,SAAF;AAAaC,IAAAA,UAAb;AAAyBC,IAAAA;AAAzB,MAAsCP,UAAU,CAACE,YAAD,CAApD;AAEA,QAAMM,YAAY,GAAGL,MAAM,CAACE,SAAD,CAA3B;;AAEA,MAAIA,SAAJ,EAAe;AACb,wBACE,QAAC,KAAD;AACE,MAAA,IAAI,EAAEC,UAAU,CAACG,IADnB;AAEE,MAAA,IAAI,EAAEH,UAAU,CAACI,IAFnB;AAGE,MAAA,MAAM,EAAE,MAAMH,QAAQ,CAAC;AAAEI,QAAAA,IAAI,EAAE;AAAR,OAAD,CAHxB;AAAA,6BAKE,QAAC,YAAD;AAAc,QAAA,QAAQ,EAAEJ,QAAxB;AAAA,WAAsCD;AAAtC;AAAA;AAAA;AAAA;AAAA;AALF;AAAA;AAAA;AAAA;AAAA,YADF;AASD,GAVD,MAUO,OAAO,IAAP;AACR;;GAhBQF,U;;KAAAA,U;AAkBT,eAAeA,UAAf","sourcesContent":["import React, { useContext } from \"react\";\nimport { Modal } from \"react-bootstrap\";\n\nimport { ModalContext } from \"../../context/ModalContext\";\n\nimport { MODALS } from \"./constants\";\n\nfunction BasicModal() {\n  let { modalType, modalProps, dispatch } = useContext(ModalContext);\n\n  const ModularModal = MODALS[modalType];\n\n  if (modalType) {\n    return (\n      <Modal\n        size={modalProps.size}\n        show={modalProps.open}\n        onHide={() => dispatch({ type: \"hide\" })}\n      >\n        <ModularModal dispatch={dispatch} {...modalProps} />\n      </Modal>\n    );\n  } else return null;\n}\n\nexport default BasicModal;\n"]},"metadata":{},"sourceType":"module"}