{"ast":null,"code":"var _jsxFileName = \"/Users/agustinpardo/Desktop/challenge-wispro/client/src/components/ErrorMessage/index.jsx\";\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { FormattedMessage } from \"react-intl\";\nimport { StyledError } from \"./styled-components\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ErrorMessage = ({\n  errorMessage = \"\"\n}) => {\n  return /*#__PURE__*/_jsxDEV(StyledError, {\n    children: [errorMessage && errorMessage, /*#__PURE__*/_jsxDEV(FormattedMessage, {\n      id: errorMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 5\n  }, this);\n};\n\n_c = ErrorMessage;\nErrorMessage.propTypes = {\n  errorMessage: PropTypes.string\n};\nexport default _c2 = /*#__PURE__*/React.memo(ErrorMessage);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"ErrorMessage\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"sources":["/Users/agustinpardo/Desktop/challenge-wispro/client/src/components/ErrorMessage/index.jsx"],"names":["React","PropTypes","FormattedMessage","StyledError","ErrorMessage","errorMessage","propTypes","string","memo"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,gBAAT,QAAiC,YAAjC;AAEA,SAASC,WAAT,QAA4B,qBAA5B;;;AAEA,MAAMC,YAAY,GAAG,CAAC;AAAEC,EAAAA,YAAY,GAAC;AAAf,CAAD,KAAyB;AAC5C,sBACE,QAAC,WAAD;AAAA,eACGA,YAAY,IAAIA,YADnB,eAEE,QAAC,gBAAD;AAAkB,MAAA,EAAE,EAAEA;AAAtB;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAMD,CAPD;;KAAMD,Y;AAQNA,YAAY,CAACE,SAAb,GAAyB;AACvBD,EAAAA,YAAY,EAAEJ,SAAS,CAACM;AADD,CAAzB;AAIA,kCAAeP,KAAK,CAACQ,IAAN,CAAWJ,YAAX,CAAf","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { FormattedMessage } from \"react-intl\";\n\nimport { StyledError } from \"./styled-components\";\n\nconst ErrorMessage = ({ errorMessage=\"\" }) => {\n  return (\n    <StyledError>\n      {errorMessage && errorMessage}\n      <FormattedMessage id={errorMessage} />\n    </StyledError>\n  );\n};\nErrorMessage.propTypes = {\n  errorMessage: PropTypes.string,\n};\n\nexport default React.memo(ErrorMessage);\n"]},"metadata":{},"sourceType":"module"}