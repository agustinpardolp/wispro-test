{"ast":null,"code":"var _jsxFileName = \"/Users/agustinpardo/Desktop/challenge-wispro/client/src/components/Table/index.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useCallback } from \"react\";\nimport { useTable, useSortBy } from \"react-table\";\nimport TableHeader from \"./TableHeader/TableHeader\";\nimport TableBody from \"./TableBody/TableBody\";\nimport PropTypes from \"prop-types\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport { FormattedMessage } from \"react-intl\";\nimport { StyledTable, StyledTd } from \"./styledComponents\";\nimport { DATA_TYPE } from \"./constants\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faTrashAlt, faEdit } from \"@fortawesome/free-solid-svg-icons\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Table = ({\n  columns,\n  data,\n  className,\n  callBack,\n  callBackEdit,\n  callBackDelete,\n  path\n}) => {\n  _s();\n\n  const formats = [];\n  const {\n    getTableProps,\n    getTableBodyProps,\n    headerGroups,\n    rows,\n    prepareRow\n  } = useTable({\n    columns,\n    data\n  }, useSortBy);\n\n  const renderHeader = columns => {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: headerGroups.map(headerGroup => /*#__PURE__*/_jsxDEV(\"tr\", { ...headerGroup.getHeaderGroupProps(),\n        children: headerGroup.headers.map(column =>\n        /*#__PURE__*/\n        // Add the sorting props to control sorting. For this example\n        // we can add them into the header props\n        _jsxDEV(\"th\", { ...column.getHeaderProps(column.getSortByToggleProps()),\n          children: [column.render(\"Header\"), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: column.isSorted ? column.isSortedDesc ? \" ðŸ”½\" : \" ðŸ”¼\" : \"\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 11\n      }, this))\n    }, void 0, false);\n  };\n\n  const renderBody = useCallback((data, sortDirection) => {\n    /*#__PURE__*/\n    _jsxDEV(\"tbody\", { ...getTableBodyProps(),\n      children: data && data.map((row, i) => {\n        prepareRow(row);\n        return /*#__PURE__*/_jsxDEV(\"tr\", { ...row.getRowProps(),\n          children: row.cells.map(cell => {\n            return /*#__PURE__*/_jsxDEV(\"td\", { ...cell.getCellProps(),\n              children: cell.render(\"Cell\")\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 87,\n              columnNumber: 24\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this); // if (data && data.length > 0) {\n    //   return data.map((row) => {\n    //     prepareRow(row);\n    //     console.log(row);\n    //     return (\n    //       // <TableBody\n    //       //   key={row.serial || row.id}\n    //       //   formats={formats}\n    //       //   row={row}\n    //       //   DATATYPE={DATA_TYPE}\n    //       //   callBack={callBack}\n    //       //   pathTo={path}\n    //       //   callBackEdit={callBackEdit}\n    //       //   callBackDelete={callBackDelete}\n    //       // />\n    //     );\n    //   });\n    // } else\n    //   return (\n    //     <tr>\n    //       <td\n    //         align={\"center\"}\n    //         colSpan={columns && columns.length > 0 ? columns.length : 1}\n    //       >\n    //         <FormattedMessage id=\"usersTable.noData\" />\n    //       </td>\n    //     </tr>\n    //   );\n\n  }, [callBack, callBackDelete, callBackEdit, columns, formats, path]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(StyledTable, {\n      responsive: true,\n      className: className,\n      ...getTableProps(),\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: renderHeader(columns)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", { ...getTableBodyProps(),\n        children: data && data.map((row, i) => {\n          prepareRow(row);\n          return /*#__PURE__*/_jsxDEV(\"tr\", { ...row.getRowProps(),\n            children: row.cells.map(cell => {\n              return /*#__PURE__*/_jsxDEV(\"td\", { ...cell.getCellProps(),\n                children: cell.render(\"Cell\")\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 136,\n                columnNumber: 24\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 134,\n            columnNumber: 13\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 9\n      }, this), \";\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n\n_s(Table, \"3Tr/siOCfKZ9Fk8RU3UyAuuH3jA=\", false, function () {\n  return [useTable];\n});\n\n_c = Table;\nTable.propTypes = {\n  columns: PropTypes.array,\n  data: PropTypes.array,\n  className: PropTypes.string,\n  callBack: PropTypes.func,\n  callBackEdit: PropTypes.func,\n  callBackDelete: PropTypes.func,\n  path: PropTypes.string\n};\nexport default Table;\n\nvar _c;\n\n$RefreshReg$(_c, \"Table\");","map":{"version":3,"sources":["/Users/agustinpardo/Desktop/challenge-wispro/client/src/components/Table/index.jsx"],"names":["React","useCallback","useTable","useSortBy","TableHeader","TableBody","PropTypes","v4","uuidv4","FormattedMessage","StyledTable","StyledTd","DATA_TYPE","FontAwesomeIcon","faTrashAlt","faEdit","Table","columns","data","className","callBack","callBackEdit","callBackDelete","path","formats","getTableProps","getTableBodyProps","headerGroups","rows","prepareRow","renderHeader","map","headerGroup","getHeaderGroupProps","headers","column","getHeaderProps","getSortByToggleProps","render","isSorted","isSortedDesc","renderBody","sortDirection","row","i","getRowProps","cells","cell","getCellProps","propTypes","array","string","func"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,WAAhB,QAAmC,OAAnC;AACA,SAASC,QAAT,EAAmBC,SAAnB,QAAoC,aAApC;AACA,OAAOC,WAAP,MAAwB,2BAAxB;AACA,OAAOC,SAAP,MAAsB,uBAAtB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,EAAE,IAAIC,MAAf,QAA6B,MAA7B;AACA,SAASC,gBAAT,QAAiC,YAAjC;AACA,SAASC,WAAT,EAAsBC,QAAtB,QAAsC,oBAAtC;AACA,SAASC,SAAT,QAA0B,aAA1B;AACA,SAASC,eAAT,QAAgC,gCAAhC;AACA,SAASC,UAAT,EAAqBC,MAArB,QAAmC,mCAAnC;;;;AAEA,MAAMC,KAAK,GAAG,CAAC;AACbC,EAAAA,OADa;AAEbC,EAAAA,IAFa;AAGbC,EAAAA,SAHa;AAIbC,EAAAA,QAJa;AAKbC,EAAAA,YALa;AAMbC,EAAAA,cANa;AAObC,EAAAA;AAPa,CAAD,KAQR;AAAA;;AACJ,QAAMC,OAAO,GAAG,EAAhB;AACA,QAAM;AACJC,IAAAA,aADI;AAEJC,IAAAA,iBAFI;AAGJC,IAAAA,YAHI;AAIJC,IAAAA,IAJI;AAKJC,IAAAA;AALI,MAMF3B,QAAQ,CACV;AACEe,IAAAA,OADF;AAEEC,IAAAA;AAFF,GADU,EAKVf,SALU,CANZ;;AAaA,QAAM2B,YAAY,GAAIb,OAAD,IAAa;AAChC,wBACE;AAAA,gBACGU,YAAY,CAACI,GAAb,CAAkBC,WAAD,iBAChB,mBAAQA,WAAW,CAACC,mBAAZ,EAAR;AAAA,kBACGD,WAAW,CAACE,OAAZ,CAAoBH,GAApB,CAAyBI,MAAD;AAAA;AACvB;AACA;AACA,2BAAQA,MAAM,CAACC,cAAP,CAAsBD,MAAM,CAACE,oBAAP,EAAtB,CAAR;AAAA,qBACGF,MAAM,CAACG,MAAP,CAAc,QAAd,CADH,eAGE;AAAA,sBACGH,MAAM,CAACI,QAAP,GAAmBJ,MAAM,CAACK,YAAP,GAAsB,KAAtB,GAA8B,KAAjD,GAA0D;AAD7D;AAAA;AAAA;AAAA;AAAA,kBAHF;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHD;AADH;AAAA;AAAA;AAAA;AAAA,cADD;AADH,qBADF;AAwCD,GAzCD;;AA2CA,QAAMC,UAAU,GAAGxC,WAAW,CAC5B,CAACiB,IAAD,EAAOwB,aAAP,KAAyB;AACvB;AAAA,0BAAWhB,iBAAiB,EAA5B;AAAA,gBACGR,IAAI,IAAIA,IAAI,CAACa,GAAL,CAAS,CAACY,GAAD,EAAMC,CAAN,KAAY;AAC5Bf,QAAAA,UAAU,CAACc,GAAD,CAAV;AACA,4BACE,mBAAQA,GAAG,CAACE,WAAJ,EAAR;AAAA,oBACGF,GAAG,CAACG,KAAJ,CAAUf,GAAV,CAAegB,IAAD,IAAU;AACvB,gCAAO,mBAAQA,IAAI,CAACC,YAAL,EAAR;AAAA,wBAA8BD,IAAI,CAACT,MAAL,CAAY,MAAZ;AAA9B;AAAA;AAAA;AAAA;AAAA,oBAAP;AACD,WAFA;AADH;AAAA;AAAA;AAAA;AAAA,gBADF;AAOD,OATQ;AADX;AAAA;AAAA;AAAA;AAAA,aADuB,CAavB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACD,GA3C2B,EA4C5B,CAAClB,QAAD,EAAWE,cAAX,EAA2BD,YAA3B,EAAyCJ,OAAzC,EAAkDO,OAAlD,EAA2DD,IAA3D,CA5C4B,CAA9B;AA+CA,sBACE;AAAA,2BACE,QAAC,WAAD;AAAa,MAAA,UAAU,MAAvB;AAAwB,MAAA,SAAS,EAAEJ,SAAnC;AAAA,SAAkDM,aAAa,EAA/D;AAAA,8BACE;AAAA,kBAAQK,YAAY,CAACb,OAAD;AAApB;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,sBAAWS,iBAAiB,EAA5B;AAAA,kBACCR,IAAI,IAAIA,IAAI,CAACa,GAAL,CAAS,CAACY,GAAD,EAAMC,CAAN,KAAY;AAC5Bf,UAAAA,UAAU,CAACc,GAAD,CAAV;AACA,8BACE,mBAAQA,GAAG,CAACE,WAAJ,EAAR;AAAA,sBACGF,GAAG,CAACG,KAAJ,CAAUf,GAAV,CAAegB,IAAD,IAAU;AACvB,kCAAO,mBAAQA,IAAI,CAACC,YAAL,EAAR;AAAA,0BAA8BD,IAAI,CAACT,MAAL,CAAY,MAAZ;AAA9B;AAAA;AAAA;AAAA;AAAA,sBAAP;AACD,aAFA;AADH;AAAA;AAAA;AAAA;AAAA,kBADF;AAOD,SATQ;AADT;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF,mBADF;AAqBD,CAtID;;GAAMtB,K;UAgBAd,Q;;;KAhBAc,K;AAwINA,KAAK,CAACiC,SAAN,GAAkB;AAChBhC,EAAAA,OAAO,EAAEX,SAAS,CAAC4C,KADH;AAEhBhC,EAAAA,IAAI,EAAEZ,SAAS,CAAC4C,KAFA;AAGhB/B,EAAAA,SAAS,EAAEb,SAAS,CAAC6C,MAHL;AAIhB/B,EAAAA,QAAQ,EAAEd,SAAS,CAAC8C,IAJJ;AAKhB/B,EAAAA,YAAY,EAAEf,SAAS,CAAC8C,IALR;AAMhB9B,EAAAA,cAAc,EAAEhB,SAAS,CAAC8C,IANV;AAOhB7B,EAAAA,IAAI,EAAEjB,SAAS,CAAC6C;AAPA,CAAlB;AAUA,eAAenC,KAAf","sourcesContent":["import React, { useCallback } from \"react\";\nimport { useTable, useSortBy } from \"react-table\";\nimport TableHeader from \"./TableHeader/TableHeader\";\nimport TableBody from \"./TableBody/TableBody\";\nimport PropTypes from \"prop-types\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport { FormattedMessage } from \"react-intl\";\nimport { StyledTable, StyledTd } from \"./styledComponents\";\nimport { DATA_TYPE } from \"./constants\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faTrashAlt, faEdit } from \"@fortawesome/free-solid-svg-icons\";\n\nconst Table = ({\n  columns,\n  data,\n  className,\n  callBack,\n  callBackEdit,\n  callBackDelete,\n  path,\n}) => {\n  const formats = [];\n  const {\n    getTableProps,\n    getTableBodyProps,\n    headerGroups,\n    rows,\n    prepareRow,\n  } = useTable(\n    {\n      columns,\n      data,\n    },\n    useSortBy\n  );\n  const renderHeader = (columns) => {\n    return (\n      <>\n        {headerGroups.map((headerGroup) => (\n          <tr {...headerGroup.getHeaderGroupProps()}>\n            {headerGroup.headers.map((column) => (\n              // Add the sorting props to control sorting. For this example\n              // we can add them into the header props\n              <th {...column.getHeaderProps(column.getSortByToggleProps())}>\n                {column.render(\"Header\")}\n                {/* Add a sort direction indicator */}\n                <span>\n                  {column.isSorted ? (column.isSortedDesc ? \" ðŸ”½\" : \" ðŸ”¼\") : \"\"}\n                </span>\n              </th>\n            ))}\n          </tr>\n        ))}\n        {/* {headerGroups && headerGroups.length ? (\n          <>\n            {headerGroups.map((col) => {\n              formats.push({ format: \"text\", dataField: col.dataField });\n              return (\n                <TableHeader\n                  key={col.id}\n                  col={col}\n                />\n              );\n            })}\n            <td>\n              <FormattedMessage id={\"userTable.edit\"} />\n            </td>\n            <td>\n              <FormattedMessage id={\"userTable.delete\"} />\n            </td>\n          </>\n        ) : (\n          <th />\n        )} */}\n      </>\n    );\n  };\n\n  const renderBody = useCallback(\n    (data, sortDirection) => {\n      <tbody {...getTableBodyProps()}>\n        {data && data.map((row, i) => {\n          prepareRow(row);\n          return (\n            <tr {...row.getRowProps()}>\n              {row.cells.map((cell) => {\n                return <td {...cell.getCellProps()}>{cell.render(\"Cell\")}</td>;\n              })}\n            </tr>\n          );\n        })}\n      </tbody>;\n      // if (data && data.length > 0) {\n      //   return data.map((row) => {\n      //     prepareRow(row);\n      //     console.log(row);\n      //     return (\n      //       // <TableBody\n      //       //   key={row.serial || row.id}\n      //       //   formats={formats}\n      //       //   row={row}\n      //       //   DATATYPE={DATA_TYPE}\n      //       //   callBack={callBack}\n      //       //   pathTo={path}\n      //       //   callBackEdit={callBackEdit}\n      //       //   callBackDelete={callBackDelete}\n\n      //       // />\n      //     );\n      //   });\n      // } else\n      //   return (\n      //     <tr>\n      //       <td\n      //         align={\"center\"}\n      //         colSpan={columns && columns.length > 0 ? columns.length : 1}\n      //       >\n      //         <FormattedMessage id=\"usersTable.noData\" />\n      //       </td>\n      //     </tr>\n      //   );\n    },\n    [callBack, callBackDelete, callBackEdit, columns, formats, path]\n  );\n\n  return (\n    <>\n      <StyledTable responsive className={className} {...getTableProps()}>\n        <thead>{renderHeader(columns)}</thead>\n        <tbody {...getTableBodyProps()}>\n        {data && data.map((row, i) => {\n          prepareRow(row);\n          return (\n            <tr {...row.getRowProps()}>\n              {row.cells.map((cell) => {\n                return <td {...cell.getCellProps()}>{cell.render(\"Cell\")}</td>;\n              })}\n            </tr>\n          );\n        })}\n      </tbody>;\n        {/* {renderBody(data)} */}\n        {/* <tbody {...getTableBodyProps()}>{renderBody(data)}</tbody> */}\n      </StyledTable>\n    </>\n  );\n};\n\nTable.propTypes = {\n  columns: PropTypes.array,\n  data: PropTypes.array,\n  className: PropTypes.string,\n  callBack: PropTypes.func,\n  callBackEdit: PropTypes.func,\n  callBackDelete: PropTypes.func,\n  path: PropTypes.string,\n};\n\nexport default Table;\n"]},"metadata":{},"sourceType":"module"}