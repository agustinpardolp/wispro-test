{"ast":null,"code":"var _jsxFileName = \"/Users/agustinpardo/Desktop/challenge-wispro/client/src/views/Users/index.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState, useContext, useCallback } from \"react\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport { useIntl } from \"react-intl\";\nimport Table from \"../../components/Table\";\nimport { fetchUsers, deleteUser, updateUser } from \"../../store/actions/usersActions\";\nimport { StyledUserContainer, StyledDataWrapper } from \"./styled-components\";\nimport { resetOptionHandler, MODAL_TYPE, columnHandler } from \"./constants\";\nimport Submenu from \"./components/Submenu\";\nimport AccessInfo from \"./screens/AccessInfo\";\nimport { ModalContext } from \"../../context/ModalContext\";\nimport EditUser from \"./screens/EditUser\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const Users = ({\n  fetchUsers,\n  userList,\n  deleteUser,\n  updateUser\n}) => {\n  _s();\n\n  const [filteredList, setFilteredList] = useState([]);\n  const [dataTable, setDataTable] = useState(userList);\n  const [option, setOption] = useState(\"\");\n  let {\n    dispatch\n  } = useContext(ModalContext);\n  const intl = useIntl();\n  useEffect(() => {\n    fetchUsers();\n  }, [dataTable, fetchUsers]);\n  const handleSelectOption = useCallback(e => {\n    if (e.target.value === resetOptionHandler(intl)[0].dataField) {\n      clearFilters();\n    } else {\n      setOption(e.target.value);\n      let optionList = userList && userList.map((user, i) => {\n        return {\n          Header: user[e.target.value],\n          id: i\n        };\n      });\n      setFilteredList(optionList);\n    }\n  }, [userList]);\n\n  const clearFilters = () => {\n    setFilteredList([]);\n    setDataTable([]);\n    setOption(\"\");\n  };\n\n  const handleSelectFilter = useCallback(e => {\n    let data = userList.filter(user => user[option] === e.target.value);\n    setDataTable(data);\n  }, [option, userList]);\n\n  const handleDelete = data => {\n    dispatch({\n      type: \"show\",\n      modalType: MODAL_TYPE.DELETE,\n      modalProps: {\n        title: \"userModalDelete.title\",\n        message: \"userModalDelete.subtitle\",\n        open: true,\n        handleAsyncConfirm: deleteUser,\n        handleConfirm: () => dispatch({\n          type: \"hide\"\n        }),\n        posResponse: fetchUsers,\n        data: data.dni\n      }\n    });\n  };\n\n  const handleEdit = data => {\n    dispatch({\n      type: \"show\",\n      modalType: MODAL_TYPE.EDIT,\n      modalProps: {\n        title: \"userModalEdit.title\",\n        message: \"userModalEdit.subtitle\",\n        open: true,\n        size: \"lg\",\n        children: /*#__PURE__*/_jsxDEV(EditUser, {\n          data: data,\n          handleAsyncConfirm: updateUser,\n          posResponse: fetchUsers,\n          onClose: dispatch\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 11\n        }, this)\n      }\n    });\n  };\n\n  const handleAccessInfo = data => {\n    dispatch({\n      type: \"show\",\n      modalType: MODAL_TYPE.INFO,\n      modalProps: {\n        title: \"barChart.title\",\n        message: \"barChart.subtitle\",\n        open: true,\n        data: data,\n        size: \"lg\",\n        children: /*#__PURE__*/_jsxDEV(AccessInfo, {\n          data: data\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 19\n        }, this)\n      }\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(StyledUserContainer, {\n      children: [/*#__PURE__*/_jsxDEV(Submenu, {\n        filteredList: filteredList,\n        handleSelectOption: handleSelectOption,\n        handleSelectFilter: handleSelectFilter,\n        intl: intl\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(StyledDataWrapper, {\n        children: /*#__PURE__*/_jsxDEV(Table, {\n          columns: columnHandler(intl),\n          data: dataTable.length ? dataTable : userList,\n          callBackDelete: handleDelete,\n          callBackEdit: handleEdit,\n          callBack: handleAccessInfo\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n\n_s(Users, \"I6BGwMvndTbt3MkqvpANx6F/Fvw=\", false, function () {\n  return [useIntl];\n});\n\n_c = Users;\nexport const mapStateToProps = state => {\n  const {\n    users: {\n      data: userList,\n      status\n    }\n  } = state;\n  return {\n    userList,\n    status\n  };\n};\nexport const mapDispatchToProps = {\n  fetchUsers,\n  deleteUser,\n  updateUser\n};\nUsers.propTypes = {\n  fetchUsers: PropTypes.func,\n  deleteUser: PropTypes.func,\n  updateUser: PropTypes.func\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(Users);\n\nvar _c;\n\n$RefreshReg$(_c, \"Users\");","map":{"version":3,"sources":["/Users/agustinpardo/Desktop/challenge-wispro/client/src/views/Users/index.jsx"],"names":["React","useEffect","useState","useContext","useCallback","connect","PropTypes","useIntl","Table","fetchUsers","deleteUser","updateUser","StyledUserContainer","StyledDataWrapper","resetOptionHandler","MODAL_TYPE","columnHandler","Submenu","AccessInfo","ModalContext","EditUser","Users","userList","filteredList","setFilteredList","dataTable","setDataTable","option","setOption","dispatch","intl","handleSelectOption","e","target","value","dataField","clearFilters","optionList","map","user","i","Header","id","handleSelectFilter","data","filter","handleDelete","type","modalType","DELETE","modalProps","title","message","open","handleAsyncConfirm","handleConfirm","posResponse","dni","handleEdit","EDIT","size","children","handleAccessInfo","INFO","length","mapStateToProps","state","users","status","mapDispatchToProps","propTypes","func"],"mappings":";;;AAAA,OAAOA,KAAP,IACEC,SADF,EAEEC,QAFF,EAGEC,UAHF,EAIEC,WAJF,QAKO,OALP;AAMA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,OAAT,QAAwB,YAAxB;AACA,OAAOC,KAAP,MAAkB,wBAAlB;AACA,SACEC,UADF,EAEEC,UAFF,EAGEC,UAHF,QAIO,kCAJP;AAKA,SAASC,mBAAT,EAA8BC,iBAA9B,QAAuD,qBAAvD;AACA,SAASC,kBAAT,EAA6BC,UAA7B,EAAyCC,aAAzC,QAA8D,aAA9D;AACA,OAAOC,OAAP,MAAoB,sBAApB;AACA,OAAOC,UAAP,MAAuB,sBAAvB;AACA,SAASC,YAAT,QAA6B,4BAA7B;AACA,OAAOC,QAAP,MAAqB,oBAArB;;;AAEA,OAAO,MAAMC,KAAK,GAAG,CAAC;AAAEZ,EAAAA,UAAF;AAAca,EAAAA,QAAd;AAAwBZ,EAAAA,UAAxB;AAAoCC,EAAAA;AAApC,CAAD,KAAsD;AAAA;;AACzE,QAAM,CAACY,YAAD,EAAeC,eAAf,IAAkCtB,QAAQ,CAAC,EAAD,CAAhD;AACA,QAAM,CAACuB,SAAD,EAAYC,YAAZ,IAA4BxB,QAAQ,CAACoB,QAAD,CAA1C;AACA,QAAM,CAACK,MAAD,EAASC,SAAT,IAAsB1B,QAAQ,CAAC,EAAD,CAApC;AACA,MAAI;AAAE2B,IAAAA;AAAF,MAAe1B,UAAU,CAACgB,YAAD,CAA7B;AACA,QAAMW,IAAI,GAAGvB,OAAO,EAApB;AAEAN,EAAAA,SAAS,CAAC,MAAM;AACdQ,IAAAA,UAAU;AACX,GAFQ,EAEN,CAACgB,SAAD,EAAYhB,UAAZ,CAFM,CAAT;AAIA,QAAMsB,kBAAkB,GAAG3B,WAAW,CACnC4B,CAAD,IAAO;AACL,QAAIA,CAAC,CAACC,MAAF,CAASC,KAAT,KAAmBpB,kBAAkB,CAACgB,IAAD,CAAlB,CAAyB,CAAzB,EAA4BK,SAAnD,EAA8D;AAC5DC,MAAAA,YAAY;AACb,KAFD,MAEO;AACLR,MAAAA,SAAS,CAACI,CAAC,CAACC,MAAF,CAASC,KAAV,CAAT;AACA,UAAIG,UAAU,GACZf,QAAQ,IACRA,QAAQ,CAACgB,GAAT,CAAa,CAACC,IAAD,EAAOC,CAAP,KAAa;AACxB,eAAO;AAAEC,UAAAA,MAAM,EAAEF,IAAI,CAACP,CAAC,CAACC,MAAF,CAASC,KAAV,CAAd;AAAgCQ,UAAAA,EAAE,EAAEF;AAApC,SAAP;AACD,OAFD,CAFF;AAKAhB,MAAAA,eAAe,CAACa,UAAD,CAAf;AACD;AACF,GAbmC,EAcpC,CAACf,QAAD,CAdoC,CAAtC;;AAiBA,QAAMc,YAAY,GAAG,MAAM;AACzBZ,IAAAA,eAAe,CAAC,EAAD,CAAf;AACAE,IAAAA,YAAY,CAAC,EAAD,CAAZ;AACAE,IAAAA,SAAS,CAAC,EAAD,CAAT;AACD,GAJD;;AAMA,QAAMe,kBAAkB,GAAGvC,WAAW,CACnC4B,CAAD,IAAO;AACL,QAAIY,IAAI,GAAGtB,QAAQ,CAACuB,MAAT,CAAiBN,IAAD,IAAUA,IAAI,CAACZ,MAAD,CAAJ,KAAiBK,CAAC,CAACC,MAAF,CAASC,KAApD,CAAX;AACAR,IAAAA,YAAY,CAACkB,IAAD,CAAZ;AACD,GAJmC,EAKpC,CAACjB,MAAD,EAASL,QAAT,CALoC,CAAtC;;AAQA,QAAMwB,YAAY,GAAIF,IAAD,IAAU;AAC7Bf,IAAAA,QAAQ,CAAC;AACPkB,MAAAA,IAAI,EAAE,MADC;AAEPC,MAAAA,SAAS,EAAEjC,UAAU,CAACkC,MAFf;AAGPC,MAAAA,UAAU,EAAE;AACVC,QAAAA,KAAK,EAAE,uBADG;AAEVC,QAAAA,OAAO,EAAE,0BAFC;AAGVC,QAAAA,IAAI,EAAE,IAHI;AAIVC,QAAAA,kBAAkB,EAAE5C,UAJV;AAKV6C,QAAAA,aAAa,EAAE,MAAM1B,QAAQ,CAAC;AAAEkB,UAAAA,IAAI,EAAE;AAAR,SAAD,CALnB;AAMVS,QAAAA,WAAW,EAAE/C,UANH;AAOVmC,QAAAA,IAAI,EAAEA,IAAI,CAACa;AAPD;AAHL,KAAD,CAAR;AAaD,GAdD;;AAgBA,QAAMC,UAAU,GAAId,IAAD,IAAU;AAC3Bf,IAAAA,QAAQ,CAAC;AACPkB,MAAAA,IAAI,EAAE,MADC;AAEPC,MAAAA,SAAS,EAAEjC,UAAU,CAAC4C,IAFf;AAGPT,MAAAA,UAAU,EAAE;AACVC,QAAAA,KAAK,EAAE,qBADG;AAEVC,QAAAA,OAAO,EAAE,wBAFC;AAGVC,QAAAA,IAAI,EAAE,IAHI;AAIVO,QAAAA,IAAI,EAAE,IAJI;AAKVC,QAAAA,QAAQ,eACN,QAAC,QAAD;AACE,UAAA,IAAI,EAAEjB,IADR;AAEE,UAAA,kBAAkB,EAAEjC,UAFtB;AAGE,UAAA,WAAW,EAAEF,UAHf;AAIE,UAAA,OAAO,EAAEoB;AAJX;AAAA;AAAA;AAAA;AAAA;AANQ;AAHL,KAAD,CAAR;AAkBD,GAnBD;;AAqBA,QAAMiC,gBAAgB,GAAIlB,IAAD,IAAU;AACjCf,IAAAA,QAAQ,CAAC;AACPkB,MAAAA,IAAI,EAAE,MADC;AAEPC,MAAAA,SAAS,EAAEjC,UAAU,CAACgD,IAFf;AAGPb,MAAAA,UAAU,EAAE;AACVC,QAAAA,KAAK,EAAE,gBADG;AAEVC,QAAAA,OAAO,EAAE,mBAFC;AAGVC,QAAAA,IAAI,EAAE,IAHI;AAIVT,QAAAA,IAAI,EAAEA,IAJI;AAKVgB,QAAAA,IAAI,EAAE,IALI;AAMVC,QAAAA,QAAQ,eAAE,QAAC,UAAD;AAAY,UAAA,IAAI,EAAEjB;AAAlB;AAAA;AAAA;AAAA;AAAA;AANA;AAHL,KAAD,CAAR;AAYD,GAbD;;AAeA,sBACE;AAAA,2BACE,QAAC,mBAAD;AAAA,8BACE,QAAC,OAAD;AACE,QAAA,YAAY,EAAErB,YADhB;AAEE,QAAA,kBAAkB,EAAEQ,kBAFtB;AAGE,QAAA,kBAAkB,EAAEY,kBAHtB;AAIE,QAAA,IAAI,EAAEb;AAJR;AAAA;AAAA;AAAA;AAAA,cADF,eAOE,QAAC,iBAAD;AAAA,+BACE,QAAC,KAAD;AACE,UAAA,OAAO,EAAEd,aAAa,CAACc,IAAD,CADxB;AAEE,UAAA,IAAI,EAAEL,SAAS,CAACuC,MAAV,GAAmBvC,SAAnB,GAA+BH,QAFvC;AAGE,UAAA,cAAc,EAAEwB,YAHlB;AAIE,UAAA,YAAY,EAAEY,UAJhB;AAKE,UAAA,QAAQ,EAAEI;AALZ;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAPF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF,mBADF;AAqBD,CAnHM;;GAAMzC,K;UAKEd,O;;;KALFc,K;AAqHb,OAAO,MAAM4C,eAAe,GAAIC,KAAD,IAAW;AACxC,QAAM;AACJC,IAAAA,KAAK,EAAE;AAAEvB,MAAAA,IAAI,EAAEtB,QAAR;AAAkB8C,MAAAA;AAAlB;AADH,MAEFF,KAFJ;AAGA,SAAO;AACL5C,IAAAA,QADK;AAEL8C,IAAAA;AAFK,GAAP;AAID,CARM;AAUP,OAAO,MAAMC,kBAAkB,GAAG;AAChC5D,EAAAA,UADgC;AAEhCC,EAAAA,UAFgC;AAGhCC,EAAAA;AAHgC,CAA3B;AAMPU,KAAK,CAACiD,SAAN,GAAkB;AAChB7D,EAAAA,UAAU,EAAEH,SAAS,CAACiE,IADN;AAEhB7D,EAAAA,UAAU,EAAEJ,SAAS,CAACiE,IAFN;AAGhB5D,EAAAA,UAAU,EAAEL,SAAS,CAACiE;AAHN,CAAlB;AAMA,eAAelE,OAAO,CAAC4D,eAAD,EAAkBI,kBAAlB,CAAP,CAA6ChD,KAA7C,CAAf","sourcesContent":["import React, {\n  useEffect,\n  useState,\n  useContext,\n  useCallback,\n} from \"react\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport { useIntl } from \"react-intl\";\nimport Table from \"../../components/Table\";\nimport {\n  fetchUsers,\n  deleteUser,\n  updateUser,\n} from \"../../store/actions/usersActions\";\nimport { StyledUserContainer, StyledDataWrapper } from \"./styled-components\";\nimport { resetOptionHandler, MODAL_TYPE, columnHandler } from \"./constants\";\nimport Submenu from \"./components/Submenu\";\nimport AccessInfo from \"./screens/AccessInfo\";\nimport { ModalContext } from \"../../context/ModalContext\";\nimport EditUser from \"./screens/EditUser\";\n\nexport const Users = ({ fetchUsers, userList, deleteUser, updateUser }) => {\n  const [filteredList, setFilteredList] = useState([]);\n  const [dataTable, setDataTable] = useState(userList);\n  const [option, setOption] = useState(\"\");\n  let { dispatch } = useContext(ModalContext);\n  const intl = useIntl();\n\n  useEffect(() => {\n    fetchUsers();\n  }, [dataTable, fetchUsers]);\n\n  const handleSelectOption = useCallback(\n    (e) => {\n      if (e.target.value === resetOptionHandler(intl)[0].dataField) {\n        clearFilters();\n      } else {\n        setOption(e.target.value);\n        let optionList =\n          userList &&\n          userList.map((user, i) => {\n            return { Header: user[e.target.value], id: i };\n          });\n        setFilteredList(optionList);\n      }\n    },\n    [userList]\n  );\n\n  const clearFilters = () => {\n    setFilteredList([]);\n    setDataTable([]);\n    setOption(\"\");\n  };\n\n  const handleSelectFilter = useCallback(\n    (e) => {\n      let data = userList.filter((user) => user[option] === e.target.value);\n      setDataTable(data);\n    },\n    [option, userList]\n  );\n\n  const handleDelete = (data) => {\n    dispatch({\n      type: \"show\",\n      modalType: MODAL_TYPE.DELETE,\n      modalProps: {\n        title: \"userModalDelete.title\",\n        message: \"userModalDelete.subtitle\",\n        open: true,\n        handleAsyncConfirm: deleteUser,\n        handleConfirm: () => dispatch({ type: \"hide\" }),\n        posResponse: fetchUsers,\n        data: data.dni,\n      },\n    });\n  };\n\n  const handleEdit = (data) => {\n    dispatch({\n      type: \"show\",\n      modalType: MODAL_TYPE.EDIT,\n      modalProps: {\n        title: \"userModalEdit.title\",\n        message: \"userModalEdit.subtitle\",\n        open: true,\n        size: \"lg\",\n        children: (\n          <EditUser\n            data={data}\n            handleAsyncConfirm={updateUser}\n            posResponse={fetchUsers}\n            onClose={dispatch}\n          />\n        ),\n      },\n    });\n  };\n\n  const handleAccessInfo = (data) => {\n    dispatch({\n      type: \"show\",\n      modalType: MODAL_TYPE.INFO,\n      modalProps: {\n        title: \"barChart.title\",\n        message: \"barChart.subtitle\",\n        open: true,\n        data: data,\n        size: \"lg\",\n        children: <AccessInfo data={data} />,\n      },\n    });\n  };\n\n  return (\n    <>\n      <StyledUserContainer>\n        <Submenu\n          filteredList={filteredList}\n          handleSelectOption={handleSelectOption}\n          handleSelectFilter={handleSelectFilter}\n          intl={intl}\n        />\n        <StyledDataWrapper>\n          <Table\n            columns={columnHandler(intl)}\n            data={dataTable.length ? dataTable : userList}\n            callBackDelete={handleDelete}\n            callBackEdit={handleEdit}\n            callBack={handleAccessInfo}\n          />\n        </StyledDataWrapper>\n      </StyledUserContainer>\n    </>\n  );\n};\n\nexport const mapStateToProps = (state) => {\n  const {\n    users: { data: userList, status },\n  } = state;\n  return {\n    userList,\n    status,\n  };\n};\n\nexport const mapDispatchToProps = {\n  fetchUsers,\n  deleteUser,\n  updateUser,\n};\n\nUsers.propTypes = {\n  fetchUsers: PropTypes.func,\n  deleteUser: PropTypes.func,\n  updateUser: PropTypes.func,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Users);\n"]},"metadata":{},"sourceType":"module"}