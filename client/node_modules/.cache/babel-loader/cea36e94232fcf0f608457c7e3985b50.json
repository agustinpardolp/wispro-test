{"ast":null,"code":"import types from \"./types\";\nimport { authServices } from \"../../../services/authServices\";\n/*-------- LOGIN USER -------------- */\n\nexport const loginRequest = () => {\n  return {\n    type: types.LOGIN_USER_REQUEST\n  };\n};\nexport const loginSuccess = data => {\n  return {\n    type: types.LOGIN_USER_SUCCESS,\n    payload: data\n  };\n};\nexport const loginFailure = error => {\n  return {\n    type: types.LOGIN_USER_FAILURE,\n    payload: error\n  };\n};\nexport const login = user => dispatch => {\n  dispatch(loginRequest());\n  return authServices.login(user.email, user.password, user.rememberUser).then(response => dispatch(loginSuccess(response))).catch(error => dispatch(loginFailure({\n    error\n  })));\n};\n/*-------- LOGOUT USER -------------- */\n\nexport const logoutRequest = () => {\n  return {\n    type: types.LOGOUT_USER_REQUEST\n  };\n};\nexport const logoutSuccess = () => {\n  return {\n    type: types.LOGOUT_USER_SUCCESS\n  };\n};\nexport const logoutFailure = error => {\n  return {\n    type: types.LOGOUT_USER_FAILURE,\n    payload: error\n  };\n};\nexport const logout = () => dispatch => {\n  dispatch(logoutRequest());\n  return authServices.logout(dispatch(logoutSuccess()));\n};","map":{"version":3,"sources":["/Users/agustinpardo/Desktop/challenge-wispro/client/src/store/actions/loginActions/index.js"],"names":["types","authServices","loginRequest","type","LOGIN_USER_REQUEST","loginSuccess","data","LOGIN_USER_SUCCESS","payload","loginFailure","error","LOGIN_USER_FAILURE","login","user","dispatch","email","password","rememberUser","then","response","catch","logoutRequest","LOGOUT_USER_REQUEST","logoutSuccess","LOGOUT_USER_SUCCESS","logoutFailure","LOGOUT_USER_FAILURE","logout"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,SAAlB;AACA,SAASC,YAAT,QAA6B,gCAA7B;AAEA;;AAEA,OAAO,MAAMC,YAAY,GAAG,MAAM;AAChC,SAAO;AACLC,IAAAA,IAAI,EAAEH,KAAK,CAACI;AADP,GAAP;AAGD,CAJM;AAKP,OAAO,MAAMC,YAAY,GAAIC,IAAD,IAAU;AACpC,SAAO;AACLH,IAAAA,IAAI,EAAEH,KAAK,CAACO,kBADP;AAELC,IAAAA,OAAO,EAAEF;AAFJ,GAAP;AAID,CALM;AAMP,OAAO,MAAMG,YAAY,GAAIC,KAAD,IAAW;AACrC,SAAO;AACLP,IAAAA,IAAI,EAAEH,KAAK,CAACW,kBADP;AAELH,IAAAA,OAAO,EAAEE;AAFJ,GAAP;AAID,CALM;AAOP,OAAO,MAAME,KAAK,GAAIC,IAAD,IAAWC,QAAD,IAAc;AAC3CA,EAAAA,QAAQ,CAACZ,YAAY,EAAb,CAAR;AACA,SAAOD,YAAY,CAChBW,KADI,CACEC,IAAI,CAACE,KADP,EACcF,IAAI,CAACG,QADnB,EAC6BH,IAAI,CAACI,YADlC,EAEJC,IAFI,CAEEC,QAAD,IAAcL,QAAQ,CAACT,YAAY,CAACc,QAAD,CAAb,CAFvB,EAGJC,KAHI,CAGGV,KAAD,IAAWI,QAAQ,CAACL,YAAY,CAAC;AAAEC,IAAAA;AAAF,GAAD,CAAb,CAHrB,CAAP;AAID,CANM;AAQP;;AACA,OAAO,MAAMW,aAAa,GAAG,MAAM;AACjC,SAAO;AACLlB,IAAAA,IAAI,EAAEH,KAAK,CAACsB;AADP,GAAP;AAGD,CAJM;AAKP,OAAO,MAAMC,aAAa,GAAG,MAAM;AACjC,SAAO;AACLpB,IAAAA,IAAI,EAAEH,KAAK,CAACwB;AADP,GAAP;AAGD,CAJM;AAKP,OAAO,MAAMC,aAAa,GAAIf,KAAD,IAAW;AACtC,SAAO;AACLP,IAAAA,IAAI,EAAEH,KAAK,CAAC0B,mBADP;AAELlB,IAAAA,OAAO,EAAEE;AAFJ,GAAP;AAID,CALM;AAOP,OAAO,MAAMiB,MAAM,GAAG,MAAOb,QAAD,IAAc;AACxCA,EAAAA,QAAQ,CAACO,aAAa,EAAd,CAAR;AACA,SAAOpB,YAAY,CAAC0B,MAAb,CAAoBb,QAAQ,CAACS,aAAa,EAAd,CAA5B,CAAP;AACD,CAHM","sourcesContent":["import types from \"./types\";\nimport { authServices } from \"../../../services/authServices\";\n\n/*-------- LOGIN USER -------------- */\n\nexport const loginRequest = () => {\n  return {\n    type: types.LOGIN_USER_REQUEST,\n  };\n};\nexport const loginSuccess = (data) => {\n  return {\n    type: types.LOGIN_USER_SUCCESS,\n    payload: data,\n  };\n};\nexport const loginFailure = (error) => {\n  return {\n    type: types.LOGIN_USER_FAILURE,\n    payload: error,\n  };\n};\n\nexport const login = (user) => (dispatch) => {\n  dispatch(loginRequest());\n  return authServices\n    .login(user.email, user.password, user.rememberUser)\n    .then((response) => dispatch(loginSuccess(response)))\n    .catch((error) => dispatch(loginFailure({ error })));\n};\n\n/*-------- LOGOUT USER -------------- */\nexport const logoutRequest = () => {\n  return {\n    type: types.LOGOUT_USER_REQUEST,\n  };\n};\nexport const logoutSuccess = () => {\n  return {\n    type: types.LOGOUT_USER_SUCCESS,\n  };\n};\nexport const logoutFailure = (error) => {\n  return {\n    type: types.LOGOUT_USER_FAILURE,\n    payload: error,\n  };\n};\n\nexport const logout = () => (dispatch) => {\n  dispatch(logoutRequest());\n  return authServices.logout(dispatch(logoutSuccess()));\n};\n"]},"metadata":{},"sourceType":"module"}