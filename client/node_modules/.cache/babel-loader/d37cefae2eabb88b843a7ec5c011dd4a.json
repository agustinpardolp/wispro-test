{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useState, useEffect } from \"react\"; // custom hook to handler modals behiaviour\n\nexport const useModal = (state, trigger, path, history) => {\n  _s();\n\n  let [showModal, setShowModal] = useState(state);\n  useEffect(() => {\n    trigger && setShowModal(true);\n  }, [trigger]);\n\n  const hideModal = () => {\n    setShowModal(false);\n  };\n\n  const onConfirmRedirect = () => {\n    history.push(path);\n  };\n\n  const openModal = () => {\n    setShowModal(true);\n  };\n\n  const toggleModal = () => {\n    setShowModal(!showModal);\n  };\n\n  return {\n    showModal,\n    setShowModal,\n    hideModal,\n    onConfirmRedirect,\n    openModal,\n    toggleModal\n  };\n};\n\n_s(useModal, \"zsX6k+DDy7INM4CFxt/zalzU2XU=\");","map":{"version":3,"sources":["/Users/agustinpardo/Desktop/challenge-wispro/client/src/hooks/index.js"],"names":["useState","useEffect","useModal","state","trigger","path","history","showModal","setShowModal","hideModal","onConfirmRedirect","push","openModal","toggleModal"],"mappings":";;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC,C,CACA;;AACA,OAAO,MAAMC,QAAQ,GAAG,CAACC,KAAD,EAAQC,OAAR,EAAiBC,IAAjB,EAAuBC,OAAvB,KAAmC;AAAA;;AACzD,MAAI,CAACC,SAAD,EAAYC,YAAZ,IAA4BR,QAAQ,CAACG,KAAD,CAAxC;AAEAF,EAAAA,SAAS,CAAC,MAAM;AACdG,IAAAA,OAAO,IAAII,YAAY,CAAC,IAAD,CAAvB;AACD,GAFQ,EAEN,CAACJ,OAAD,CAFM,CAAT;;AAIA,QAAMK,SAAS,GAAG,MAAM;AACtBD,IAAAA,YAAY,CAAC,KAAD,CAAZ;AACD,GAFD;;AAGA,QAAME,iBAAiB,GAAG,MAAM;AAC9BJ,IAAAA,OAAO,CAACK,IAAR,CAAaN,IAAb;AACD,GAFD;;AAGA,QAAMO,SAAS,GAAG,MAAM;AACtBJ,IAAAA,YAAY,CAAC,IAAD,CAAZ;AACD,GAFD;;AAGA,QAAMK,WAAW,GAAG,MAAM;AACxBL,IAAAA,YAAY,CAAC,CAACD,SAAF,CAAZ;AACD,GAFD;;AAIA,SAAO;AACLA,IAAAA,SADK;AAELC,IAAAA,YAFK;AAGLC,IAAAA,SAHK;AAILC,IAAAA,iBAJK;AAKLE,IAAAA,SALK;AAMLC,IAAAA;AANK,GAAP;AAQD,CA5BM;;GAAMX,Q","sourcesContent":["import { useState, useEffect } from \"react\";\n// custom hook to handler modals behiaviour\nexport const useModal = (state, trigger, path, history) => {\n  let [showModal, setShowModal] = useState(state);\n\n  useEffect(() => {\n    trigger && setShowModal(true);\n  }, [trigger]);\n\n  const hideModal = () => {\n    setShowModal(false);\n  };\n  const onConfirmRedirect = () => {\n    history.push(path);\n  };\n  const openModal = () => {\n    setShowModal(true);\n  };\n  const toggleModal = () => {\n    setShowModal(!showModal);\n  };\n\n  return {\n    showModal,\n    setShowModal,\n    hideModal,\n    onConfirmRedirect,\n    openModal,\n    toggleModal,\n  };\n};\n"]},"metadata":{},"sourceType":"module"}