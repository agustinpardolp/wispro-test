{"ast":null,"code":"var _jsxFileName = \"/Users/agustinpardo/Desktop/challenge-wispro/Client/src/components/ToastNotification/index.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { connect } from \"react-redux\";\nimport { resetNotification } from \"../../store/actions/notificationActions/\";\nimport { StyledNotification } from \"./styledComponents\";\nimport { SideAnimation } from \"../../utils/animations\"; //component to show a notificacion when the login is succesfull\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ToastNotification = ({\n  message,\n  msgType,\n  resetNotification\n}) => {\n  _s();\n\n  const [isOpen, setIsOpen] = useState(false);\n  useEffect(() => {\n    if (message) {\n      handlerOpenToast();\n      const closeMessage = setTimeout(() => {\n        setIsOpen(false);\n        resetNotification();\n      }, 5000);\n      return () => {\n        clearTimeout(closeMessage);\n      };\n    }\n  }, [message, resetNotification]);\n\n  const handleClick = () => {\n    setIsOpen(false);\n  };\n\n  const handlerOpenToast = () => {\n    setTimeout(() => {\n      setIsOpen(true);\n    });\n  };\n\n  return isOpen ? /*#__PURE__*/ReactDOM.createPortal( /*#__PURE__*/_jsxDEV(SideAnimation, {\n    duration: \"1.5s\",\n    delay: \"0.3s\",\n    position: \"absolute\",\n    right: \"0%\",\n    width: \"15rem\",\n    top: \"2%\",\n    height: \"10%\",\n    children: /*#__PURE__*/_jsxDEV(StyledNotification, {\n      type: msgType,\n      children: [message, /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        className: \"close\",\n        \"data-dismiss\": \"alert\",\n        \"aria-label\": \"Close\",\n        onClick: handleClick,\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          \"aria-hidden\": \"true\",\n          children: \"\\xD7\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 11\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 9\n  }, this), document.getElementById(\"toast-notificacion-root\")) : null;\n};\n\n_s(ToastNotification, \"vl0Rt3/A8evyRPW1OQ1AhRk4UhU=\");\n\n_c = ToastNotification;\nexport const mapStateToProps = state => {\n  return {\n    message: state.notification.message,\n    msgType: state.notification.msgType\n  };\n};\nexport const mapDispatchToProps = {\n  resetNotification\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(ToastNotification);\n\nvar _c;\n\n$RefreshReg$(_c, \"ToastNotification\");","map":{"version":3,"sources":["/Users/agustinpardo/Desktop/challenge-wispro/Client/src/components/ToastNotification/index.jsx"],"names":["React","useState","useEffect","ReactDOM","connect","resetNotification","StyledNotification","SideAnimation","ToastNotification","message","msgType","isOpen","setIsOpen","handlerOpenToast","closeMessage","setTimeout","clearTimeout","handleClick","createPortal","document","getElementById","mapStateToProps","state","notification","mapDispatchToProps"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,iBAAT,QAAkC,0CAAlC;AACA,SAASC,kBAAT,QAAmC,oBAAnC;AACA,SAASC,aAAT,QAA8B,wBAA9B,C,CAEA;;;;AACA,MAAMC,iBAAiB,GAAG,CAAC;AAAEC,EAAAA,OAAF;AAAWC,EAAAA,OAAX;AAAoBL,EAAAA;AAApB,CAAD,KAA6C;AAAA;;AACrE,QAAM,CAACM,MAAD,EAASC,SAAT,IAAsBX,QAAQ,CAAC,KAAD,CAApC;AACAC,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIO,OAAJ,EAAa;AACXI,MAAAA,gBAAgB;AAChB,YAAMC,YAAY,GAAGC,UAAU,CAAC,MAAM;AACpCH,QAAAA,SAAS,CAAC,KAAD,CAAT;AACAP,QAAAA,iBAAiB;AAClB,OAH8B,EAG5B,IAH4B,CAA/B;AAKA,aAAO,MAAM;AACXW,QAAAA,YAAY,CAACF,YAAD,CAAZ;AACD,OAFD;AAGD;AACF,GAZQ,EAYN,CAACL,OAAD,EAAUJ,iBAAV,CAZM,CAAT;;AAaA,QAAMY,WAAW,GAAG,MAAM;AACxBL,IAAAA,SAAS,CAAC,KAAD,CAAT;AACD,GAFD;;AAIA,QAAMC,gBAAgB,GAAG,MAAM;AAC7BE,IAAAA,UAAU,CAAC,MAAM;AACfH,MAAAA,SAAS,CAAC,IAAD,CAAT;AACD,KAFS,CAAV;AAGD,GAJD;;AAMA,SAAOD,MAAM,gBACTR,QAAQ,CAACe,YAAT,eACE,QAAC,aAAD;AACE,IAAA,QAAQ,EAAC,MADX;AAEE,IAAA,KAAK,EAAC,MAFR;AAGE,IAAA,QAAQ,EAAC,UAHX;AAIE,IAAA,KAAK,EAAC,IAJR;AAKE,IAAA,KAAK,EAAC,OALR;AAME,IAAA,GAAG,EAAC,IANN;AAOE,IAAA,MAAM,EAAC,KAPT;AAAA,2BASE,QAAC,kBAAD;AAAoB,MAAA,IAAI,EAAER,OAA1B;AAAA,iBACGD,OADH,eAEE;AACE,QAAA,IAAI,EAAC,QADP;AAEE,QAAA,SAAS,EAAC,OAFZ;AAGE,wBAAa,OAHf;AAIE,sBAAW,OAJb;AAKE,QAAA,OAAO,EAAEQ,WALX;AAAA,+BAOE;AAAM,yBAAY,MAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAPF;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AATF;AAAA;AAAA;AAAA;AAAA,UADF,EAuBEE,QAAQ,CAACC,cAAT,CAAwB,yBAAxB,CAvBF,CADS,GA0BT,IA1BJ;AA2BD,CApDD;;GAAMZ,iB;;KAAAA,iB;AAsDN,OAAO,MAAMa,eAAe,GAAIC,KAAD,IAAW;AACxC,SAAO;AACLb,IAAAA,OAAO,EAAEa,KAAK,CAACC,YAAN,CAAmBd,OADvB;AAELC,IAAAA,OAAO,EAAEY,KAAK,CAACC,YAAN,CAAmBb;AAFvB,GAAP;AAID,CALM;AAMP,OAAO,MAAMc,kBAAkB,GAAG;AAChCnB,EAAAA;AADgC,CAA3B;AAIP,eAAeD,OAAO,CAACiB,eAAD,EAAkBG,kBAAlB,CAAP,CAA6ChB,iBAA7C,CAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { connect } from \"react-redux\";\nimport { resetNotification } from \"../../store/actions/notificationActions/\";\nimport { StyledNotification } from \"./styledComponents\";\nimport { SideAnimation } from \"../../utils/animations\";\n\n//component to show a notificacion when the login is succesfull\nconst ToastNotification = ({ message, msgType, resetNotification }) => {\n  const [isOpen, setIsOpen] = useState(false);\n  useEffect(() => {\n    if (message) {\n      handlerOpenToast();\n      const closeMessage = setTimeout(() => {\n        setIsOpen(false);\n        resetNotification();\n      }, 5000);\n\n      return () => {\n        clearTimeout(closeMessage);\n      };\n    }\n  }, [message, resetNotification]);\n  const handleClick = () => {\n    setIsOpen(false);\n  };\n\n  const handlerOpenToast = () => {\n    setTimeout(() => {\n      setIsOpen(true);\n    });\n  };\n\n  return isOpen\n    ? ReactDOM.createPortal(\n        <SideAnimation\n          duration=\"1.5s\"\n          delay=\"0.3s\"\n          position=\"absolute\"\n          right=\"0%\"\n          width=\"15rem\"\n          top=\"2%\"\n          height=\"10%\"\n        >\n          <StyledNotification type={msgType}>\n            {message}\n            <button\n              type=\"button\"\n              className=\"close\"\n              data-dismiss=\"alert\"\n              aria-label=\"Close\"\n              onClick={handleClick}\n            >\n              <span aria-hidden=\"true\">&times;</span>\n            </button>\n          </StyledNotification>\n        </SideAnimation>,\n        document.getElementById(\"toast-notificacion-root\")\n      )\n    : null;\n};\n\nexport const mapStateToProps = (state) => {\n  return {\n    message: state.notification.message,\n    msgType: state.notification.msgType,\n  };\n};\nexport const mapDispatchToProps = {\n  resetNotification,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ToastNotification);\n"]},"metadata":{},"sourceType":"module"}